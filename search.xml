<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HCIP -- 5 -- 路由优化</title>
      <link href="/2024/01/13/HCIP/HCIP-5-%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/"/>
      <url>/2024/01/13/HCIP/HCIP-5-%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="路由优化"><a href="#路由优化" class="headerlink" title="路由优化"></a>路由优化</h1><h2 id="一、路由优化的概念"><a href="#一、路由优化的概念" class="headerlink" title="一、路由优化的概念"></a>一、路由优化的概念</h2><ol><li>在当前网络中，传输的数据越来越多，工作的协议越来越丰富，各个协议都有着不同的选路规则与依据。</li><li>不同的路由协议选路规则不尽相同，但完全依靠协议自身的选路规则，有时选出的路径并非<code>最优</code>路径。</li><li>因此管理员需要有一些用来控制路径选择、控制更新的方法，以便于管理员能够更加精准的操纵整个网络环境。</li></ol><h2 id="二、如何控制路由更新"><a href="#二、如何控制路由更新" class="headerlink" title="二、如何控制路由更新"></a>二、如何控制路由更新</h2><ol><li>在一个网络环境中，若各个路由器均运行着同一种动态路由协议<code>OSPF</code>，在配置 OSPF 时，往往x需要在协议下配置<code>network</code>命令。</li><li><code>network 10.1.1.0 0.0.0.255</code>命令的含义有2:<ul><li>告知路由器，将 10.1.1.0&#x2F;24 通告给自己直连的邻居。</li><li>告知路由器，从配置了 10.1.1.0&#x2F;24 网段的接口上接收&#x2F;发送<code>OSPF</code>路由更新。</li></ul></li><li>但若路由器连接的是二层交换机&#x2F;client，则路由器没有必要在该接口通告路由更新，浪费链路带宽。</li></ol><h2 id="三、静默接口"><a href="#三、静默接口" class="headerlink" title="三、静默接口"></a>三、静默接口</h2><ol><li>除非局域网络中运行着多台路由器，否则在局域网中，连接着内网的接口不应该发送路由更新。</li><li>采用静默接口的方式就可以实现不让某接口发送更新的效果。</li><li>静默接口<code>Silent-Interface</code>：若某接口配置位静默接口的话，则该接口只<code>接收更新</code>,但不<code>发送更新</code>。<br><code>注：Cisco叫做【被动接口——passive interface】</code></li></ol><h2 id="四、静默接口在RIP与OSPF下的应用"><a href="#四、静默接口在RIP与OSPF下的应用" class="headerlink" title="四、静默接口在RIP与OSPF下的应用"></a>四、静默接口在RIP与OSPF下的应用</h2><ol><li>RIP使用UDP端口520来承载更新。</li><li>RIP完全继承了UDP的特点：不可靠，在数据发送前不需要提前建立关系。</li><li>RIP向其他邻居通告路由更新前，不需要提前建立关系，因此静默接口在RIP下正常工作。</li><li>两台运行OSPF路由选择协议的路由器在建立OSPF关系时，首先需要给对方互发Hello报文。</li><li>OSPF最后的邻接关系的建立是在互发Hello包的基础上完成的。</li><li>而静默接口的配置，将直接导致配置了静默接口的路由器不再从该接口发送任何数据包<code>（包括Hello包）</code>。</li><li>因此对端路由器无法接受到Hello包，从而导致OSPF关系Down掉。</li></ol><h2 id="五、Filter-Policy【过滤策略】"><a href="#五、Filter-Policy【过滤策略】" class="headerlink" title="五、Filter-Policy【过滤策略】"></a>五、Filter-Policy【过滤策略】</h2><ol><li>静默接口的使用，将会阻止该接口发送所有的路由更新。</li><li>有时网络仅仅是需要过滤掉某些路由条目，而不是过滤掉所有路由更新，此时，静默接口无法满足该需求。</li><li>上述需求可以通过创建<code>Filter-Police｜路由过滤器</code>来完成。</li><li>Filter-Policy 通过调用 ACL，令 ACL 匹配感兴趣流来实现过滤某些路由条目更新的需求。</li><li>将创建好的感兴趣流调用在 Filter- Policy 下，再将 Filter-Policy 调用在某协议下。</li><li>Filter-Policy 可以被应用于各种单播路由协议，但是在 ospf 下，Filter-Policy 不能被应用于<code>export｜出</code>方向上。<ul><li><code>注：Filter-Policy 不能被应用在 ospf 的 export 方向上，原因是：其违背了 ospf 的设计理念。</code></li><li>OSPF 的设计理念：对于 OSPF 而言，首先每台路由器均需要和自己的邻居建立邻接关系，而后不断从邻居那里接收全网的拓扑结构信息；OSPF 要求每台运行 OSPF 路由选择协议的路由器必须拥有全网最完整的路由表项，保存在LSDB <code>Link State DataDataBase｜链路状态数据库</code> 中，最后再以自身为根节点，计算出到达其他网络节点的最佳路径。</li><li>若 Filter-Policy 被应用在 OSPF 的某接口的出方向上，这将直接导致对端路由器的 LSDB 不完整，这有悖于 OSPF 的最初设计的理念，故而，Filter-Policy 不能被调用在 OSPF 的 export 方向上。</li></ul></li></ol><h2 id="六、路由的优先级"><a href="#六、路由的优先级" class="headerlink" title="六、路由的优先级"></a>六、路由的优先级</h2><ol><li>各个不同的路由选择协议选择最佳路径的方式不相同<code>RIP：跳数；OSPF：代价值</code>。</li><li>不同协议的不同度量值没有在一起比较的可能性。</li><li>若某路由器能同时从两个或多个路由选择协议处学习到相同的路由条目，此时该路由器将无法做出判断。</li><li>为了能够在不同的路由选择协议之间做出取舍，故而为每一种动态路由协议分别设置了不同的<code>优先级</code>。</li><li>同一个路由器在从不同的路由选择协议处选择相同的路由时，就比较各个协议的优先级。</li><li>路由选择协议的优先级值是评判路由协议好坏的唯一标准。</li><li>路由优先级值的取值范围：<code>0 —— 255</code>。</li><li>路由的优先级值越低，证明该协议的可信度越高。</li><li>优先级值 0 被保留给直连路由使用。</li></ol><p><img src="/../../images/HCIP/%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/%E4%BC%98%E5%85%88%E7%BA%A7%E5%80%BC%E8%A1%A8.png" alt="华为设备优先级值表"></p><h2 id="七、优先级值的修改"><a href="#七、优先级值的修改" class="headerlink" title="七、优先级值的修改"></a>七、优先级值的修改</h2><ol><li>各个厂商的路由协议的优先级值不同：<ul><li>Huawei：直连路由：0、静态路由：60、OSPF：10、RIP：100</li><li>Cisco：直连路由：0、静态路由：1、OSPF：110、RIP：120</li></ul></li><li>当在同一网络环境中，若出现了多个友商设备共同工作的情况，则管理员首选需要更改友商设备的路由协议的优先级值，要为一致。</li><li>路由的优先级值可以更改，但仅仅只具备本地效应。</li></ol><h2 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h2><h3 id="静默接口"><a href="#静默接口" class="headerlink" title="静默接口"></a>静默接口</h3><p><img src="/../../images/HCIP/%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/HCIP--5--%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96--%E9%9D%99%E9%BB%98%E6%8E%A5%E5%8F%A3.png" alt="静默接口"></p><h4 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">9</span>        Routes <span class="token builtin class-name">:</span> <span class="token number">9</span>        Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet0/0/0       <span class="token number">20.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet0/0/0      <span class="token comment">#30.1.1.0/24  Direct  0    0           D   30.1.1.2        GigabitEthernet0/0/0</span>      <span class="token comment">#30.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>    <span class="token comment">#30.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>     <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>ping <span class="token number">10.1</span>.1.2  PING <span class="token number">10.1</span>.1.2: <span class="token number">56</span>  data bytes, press CTRL_C to <span class="token builtin class-name">break</span>    Request <span class="token function">time</span> out    Reply from <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms    Reply from <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms    Reply from <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms    Reply from <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms  --- <span class="token number">10.1</span>.1.2 <span class="token function">ping</span> statistics ---    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted    <span class="token number">4</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received    <span class="token number">20.00</span>% packet loss    round-trip min/avg/max <span class="token operator">=</span> <span class="token number">30</span>/40/50 ms<span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>ping <span class="token number">20.1</span>.1.2  PING <span class="token number">20.1</span>.1.2: <span class="token number">56</span>  data bytes, press CTRL_C to <span class="token builtin class-name">break</span>    Request <span class="token function">time</span> out    Reply from <span class="token number">20.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms    Reply from <span class="token number">20.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms    Reply from <span class="token number">20.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">20</span> ms    Reply from <span class="token number">20.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms  --- <span class="token number">20.1</span>.1.2 <span class="token function">ping</span> statistics ---    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted    <span class="token number">4</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received    <span class="token number">20.00</span>% packet loss    round-trip min/avg/max <span class="token operator">=</span> <span class="token number">20</span>/27/30 ms----------------------------------------------------------------------------------------------------------<span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>int LoopBack <span class="token number">0</span><span class="token punctuation">[</span>AR4-LoopBack0<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.1 <span class="token number">32</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>rip <span class="token punctuation">[</span>AR4-rip-1<span class="token punctuation">]</span>network <span class="token number">192.168</span>.1.0<span class="token comment">#AR1</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">14</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">14</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface    <span class="token comment">#······</span>    <span class="token number">192.168</span>.1.1/32  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/2        <span class="token comment">#······</span><span class="token comment">#AR2</span><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">10</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">10</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface    <span class="token comment">#······</span>    <span class="token number">192.168</span>.1.1/32  RIP     <span class="token number">100</span>  <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0    <span class="token comment">#······</span><span class="token comment">#给AR1的g0/0/2端口设置为静默端口</span><span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>silent-interface g0/0/2<span class="token comment">#AR4路由表更新之后</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">8</span>        Routes <span class="token builtin class-name">:</span> <span class="token number">8</span>        Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/0       <span class="token number">30.1</span>.1.2/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>    <span class="token comment">#192.168.1.1/32  Direct  0    0           D   127.0.0.1       LoopBack0</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">13</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">13</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0       <span class="token number">10.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0     <span class="token number">10.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0       <span class="token number">20.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">20.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1     <span class="token number">20.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet0/0/2       <span class="token number">30.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2      <span class="token number">127.0</span>.0.0/8   Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0      <span class="token number">127.0</span>.0.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">127.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0    <span class="token number">192.168</span>.1.1/32  OSPF    <span class="token number">10</span>   <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/2<span class="token number">255.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token comment">#配置静默接口</span><span class="token punctuation">[</span>AR1-ospf-1<span class="token punctuation">]</span>silent-interface g0/0/2Dec <span class="token number">29</span> <span class="token number">2023</span> <span class="token number">20</span>:49:07-08:00 AR1 %%01OSPF/3/NBR_CHG_DOWN<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>:Neighbor event:neighbor state changed to Down. <span class="token punctuation">(</span>ProcessId<span class="token operator">=</span><span class="token number">256</span>, <span class="token assign-left variable">NeighborAddress</span><span class="token operator">=</span><span class="token number">2.1</span>.1.30, NeighborEv<span class="token assign-left variable">ent</span><span class="token operator">=</span>KillNbr, <span class="token assign-left variable">NeighborPreviousState</span><span class="token operator">=</span>Full, <span class="token assign-left variable">NeighborCurrentState</span><span class="token operator">=</span>Down<span class="token punctuation">)</span> <span class="token punctuation">[</span>AR1-ospf-1<span class="token punctuation">]</span>Dec <span class="token number">29</span> <span class="token number">2023</span> <span class="token number">20</span>:49:07-08:00 AR1 %%01OSPF/3/NBR_DOWN_REASON<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>:Neighbor state leaves full or changed to Down. <span class="token punctuation">(</span>ProcessId<span class="token operator">=</span><span class="token number">256</span>, <span class="token assign-left variable">NeighborRouterId</span><span class="token operator">=</span><span class="token number">2.1</span>.1.30, Neighb<span class="token assign-left variable">orAreaId</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">NeighborInterface</span><span class="token operator">=</span>GigabitEthernet0/0/2,NeighborDownImmediate <span class="token assign-left variable">reason</span><span class="token operator">=</span>Neighbor Down Due to Kill Neighbor, <span class="token assign-left variable">NeighborDownPrimeReason</span><span class="token operator">=</span>Passive Interface Down, <span class="token assign-left variable">NeighborChangeTime</span><span class="token operator">=</span><span class="token number">2023</span>-12-29 <span class="token number">20</span>:49:07-08:00<span class="token punctuation">)</span> <span class="token comment">#AR1和AR4的关系Down掉了</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">13</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">13</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0       <span class="token number">10.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0     <span class="token number">10.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0       <span class="token number">20.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">20.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1     <span class="token number">20.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet0/0/2       <span class="token number">30.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2      <span class="token number">127.0</span>.0.0/8   Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0      <span class="token number">127.0</span>.0.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">127.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">255.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="过滤策略"><a href="#过滤策略" class="headerlink" title="过滤策略"></a>过滤策略</h3><h4 id="RIP-1"><a href="#RIP-1" class="headerlink" title="RIP"></a>RIP</h4><p><img src="/../../images/HCIP/%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/HCIP--5--%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96--%E8%BF%87%E6%BB%A4%E7%AD%96%E7%95%A5-rip.png" alt="过滤策略-rip"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置ACL</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>acl <span class="token number">2001</span><span class="token punctuation">[</span>AR1-acl-basic-2001<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> <span class="token number">10.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR1-acl-basic-2001<span class="token punctuation">]</span>rule permit <span class="token builtin class-name">source</span> any<span class="token punctuation">[</span>AR1-rip-1<span class="token punctuation">]</span>filter-policy <span class="token number">2001</span> <span class="token builtin class-name">export</span> g0/0/2<span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">9</span>        Routes <span class="token builtin class-name">:</span> <span class="token number">9</span>        Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">20.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/0       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet<span class="token number">0</span>/0/0       <span class="token number">30.1</span>.1.2/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet<span class="token number">0</span>/0/0     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet<span class="token number">0</span>/0/0      <span class="token number">127.0</span>.0.0/8   Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0      <span class="token number">127.0</span>.0.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">127.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0    <span class="token number">192.168</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       LoopBack0<span class="token number">255.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="OSPF-1"><a href="#OSPF-1" class="headerlink" title="OSPF"></a>OSPF</h4><p><img src="/../../images/HCIP/%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/HCIP--5--%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96--%E8%BF%87%E6%BB%A4%E7%AD%96%E7%95%A5-ospf.png" alt="过滤策略-ospf"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">14</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">14</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0       <span class="token number">10.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0     <span class="token number">10.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/0       <span class="token number">20.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">20.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1     <span class="token number">20.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/1       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.1        GigabitEthernet0/0/2       <span class="token number">30.1</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet0/0/2      <span class="token number">127.0</span>.0.0/8   Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0      <span class="token number">127.0</span>.0.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">127.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0    <span class="token number">192.168</span>.1.1/32  OSPF    <span class="token number">10</span>   <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/2<span class="token number">255.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token comment">#给AR4配置ACL</span><span class="token punctuation">[</span>AR4-acl-basic-2001<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> <span class="token number">10.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR4-acl-basic-2001<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> <span class="token number">20.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR4-acl-basic-2001<span class="token punctuation">]</span>rule permit <span class="token builtin class-name">source</span> any<span class="token punctuation">[</span>AR4-ospf-1<span class="token punctuation">]</span>filter-policy <span class="token number">2001</span> <span class="token function">import</span> <span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">8</span>        Routes <span class="token builtin class-name">:</span> <span class="token number">8</span>        Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">30.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet<span class="token number">0</span>/0/0       <span class="token number">30.1</span>.1.2/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet<span class="token number">0</span>/0/0     <span class="token number">30.1</span>.1.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       GigabitEthernet<span class="token number">0</span>/0/0      <span class="token number">127.0</span>.0.0/8   Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0      <span class="token number">127.0</span>.0.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token number">127.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0    <span class="token number">192.168</span>.1.1/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       LoopBack0<span class="token number">255.255</span>.255.255/32  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">127.0</span>.0.1       InLoopBack0<span class="token comment">#AR4的邻居关系并没有被Down掉</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis ospf peer OSPF Process <span class="token number">1</span> with Router ID <span class="token number">30.1</span>.1.2 Neighbors  Area <span class="token number">0.0</span>.0.0 interface <span class="token number">30.1</span>.1.2<span class="token punctuation">(</span>GigabitEthernet0/0/0<span class="token punctuation">)</span>'s neighbors Router ID: <span class="token number">10.1</span>.1.1         Address: <span class="token number">30.1</span>.1.1           State: Full  Mode:Nbr is  Slave  Priority: <span class="token number">1</span>   DR: <span class="token number">30.1</span>.1.1  BDR: <span class="token number">30.1</span>.1.2  MTU: <span class="token number">0</span>       Dead timer due <span class="token keyword">in</span> <span class="token number">30</span>  sec    Retrans timer interval: <span class="token number">5</span>    Neighbor is up <span class="token keyword">for</span> 00:41:54        Authentication Sequence: <span class="token punctuation">[</span> <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token comment">#在lsdb总依然能看到10网段和20网段</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis ospf lsdb OSPF Process <span class="token number">1</span> with Router ID <span class="token number">30.1</span>.1.2 Link State Database          Area: <span class="token number">0.0</span>.0.0 Type      LinkState ID    AdvRouter          Age  Len   Sequence   Metric Router    <span class="token number">10.1</span>.1.2        <span class="token number">10.1</span>.1.2           <span class="token number">538</span>  <span class="token number">36</span>    <span class="token number">80000004</span>       <span class="token number">1</span> Router    <span class="token number">10.1</span>.1.1        <span class="token number">10.1</span>.1.1           <span class="token number">534</span>  <span class="token number">60</span>    <span class="token number">80000015</span>       <span class="token number">1</span> Router    <span class="token number">20.1</span>.1.2        <span class="token number">20.1</span>.1.2           <span class="token number">546</span>  <span class="token number">36</span>    <span class="token number">80000074</span>       <span class="token number">1</span> Router    <span class="token number">30.1</span>.1.2        <span class="token number">30.1</span>.1.2           <span class="token number">353</span>  <span class="token number">48</span>    <span class="token number">80000005</span>       <span class="token number">1</span> Network   <span class="token number">10.1</span>.1.1        <span class="token number">10.1</span>.1.1           <span class="token number">534</span>  <span class="token number">32</span>    <span class="token number">80000003</span>       <span class="token number">0</span> Network   <span class="token number">20.1</span>.1.1        <span class="token number">10.1</span>.1.1           <span class="token number">890</span>  <span class="token number">32</span>    <span class="token number">80000003</span>       <span class="token number">0</span> Network   <span class="token number">30.1</span>.1.1        <span class="token number">10.1</span>.1.1           <span class="token number">795</span>  <span class="token number">32</span>    <span class="token number">80000003</span>       <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p><img src="/../../images/HCIP/%E8%B7%AF%E7%94%B1%E4%BC%98%E5%8C%96/HCIP--5--%E4%BC%98%E5%85%88%E7%BA%A7%E5%80%BC.png" alt="优先级值"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>acl <span class="token number">2001</span><span class="token punctuation">[</span>AR3-acl-basic-2001<span class="token punctuation">]</span>rule permit <span class="token builtin class-name">source</span> <span class="token number">20.1</span>.1.1 <span class="token number">0</span><span class="token punctuation">[</span>AR3-acl-basic-2001<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> any<span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>route-policy <span class="token number">1</span> permit <span class="token function">node</span> <span class="token number">10</span> <span class="token comment">#Info: New Sequence of this List.</span><span class="token punctuation">[</span>AR3-route-policy<span class="token punctuation">]</span>if-match <span class="token function">ip</span> next-hop acl <span class="token number">2001</span><span class="token punctuation">[</span>AR3-route-policy<span class="token punctuation">]</span>apply preference <span class="token number">98</span><span class="token punctuation">[</span>AR3-rip-1<span class="token punctuation">]</span>preference route-policy <span class="token number">1</span><span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  RIP     <span class="token number">98</span>   <span class="token number">1</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1······       <span class="token number">40.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/0······<span class="token comment">#在AR1上创建一个环回接口192.168.1.1</span><span class="token comment">#然后在AR3上查看一下</span><span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">13</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">13</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  RIP     <span class="token number">98</span>   <span class="token number">1</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1······       <span class="token number">40.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">30.1</span>.1.2        GigabitEthernet0/0/0······    <span class="token number">192.168</span>.1.0/24  RIP     <span class="token number">98</span>   <span class="token number">2</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIP </tag>
            
            <tag> 路由优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIP -- 3 -- 传输层</title>
      <link href="/2023/10/29/HCIP/HCIP-3-%E4%BC%A0%E8%BE%93%E5%B1%82/"/>
      <url>/2023/10/29/HCIP/HCIP-3-%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="一、传输层的概念"><a href="#一、传输层的概念" class="headerlink" title="一、传输层的概念"></a>一、传输层的概念</h1><ol><li>在网络通讯的过程中，依靠网络层实现了【发现对端】的作用</li><li>在实现了【发现对端】后，我们需要精准的找到客户所想要访问的具体服务&#x2F;进程</li><li>传输层提供的端口号码的概念就满足了找到对方应用进程的目的</li></ol><h1 id="二、传输层的协议"><a href="#二、传输层的协议" class="headerlink" title="二、传输层的协议"></a>二、传输层的协议</h1><ol><li>TCP【传输控制协议】：属于面向连接的协议，在数据发送前，需要与会双方先建立连接，TCP发送的数据保证可靠性，但传输效率低下</li><li>UDP【用户数据报协议】：在数据发送前，不需要与会双方建立连接，UDP发送的数据不保证可靠性，但传输效率高</li></ol><h1 id="三、TCP的头部格式"><a href="#三、TCP的头部格式" class="headerlink" title="三、TCP的头部格式"></a>三、TCP的头部格式</h1><p><img src="/../../images/HCIP/%E7%BD%91%E7%BB%9C%E5%B1%82/TCP%E7%9A%84%E5%B0%81%E8%A3%85%E6%A0%BC%E5%BC%8F.png" alt="TCP的封装格式"></p><p><code>TCP的头部默认大小：20Byte</code></p><ol><li>源端口号码</li><li>目标端口号码</li><li>发送数据时所携带的序列号</li><li>接收端接收到数据包后给予的响应报文的确认号</li><li>4bit的首部长度字段：20Byte</li><li>6bit的保留字段</li><li>URG位【紧急指针位】：若想要将某段数据立即发送，则可将该段数据的最后一位 URG 位置为 1，表明从该段数据的第一个包至当前 URG 置位为 1 的包全部都是紧急指针位，URG&#x3D;1 的数据不进入缓存区，直接被用户进程所处理</li><li>ACK位【确认位】：表明收到对端数据后的确认报文</li><li>PSH位：若某段数据的 PSH 位置为 1，则表明该段数据进入缓存区后，不用等待缓存区满载再提交给用户进程处理，而是直接将欠载的缓存区数据提交给用户进程处理</li><li>RST位：表明请求与对端重新建立连接</li><li>SYN位：表明请求与对方建立连接</li><li>FIN位：表明请求与对方断开连接</li><li>16位的滑动窗口：用来实现流量控制</li><li>首部检验和字段：</li></ol><h1 id="四、TCP的3次握手"><a href="#四、TCP的3次握手" class="headerlink" title="四、TCP的3次握手"></a>四、TCP的3次握手</h1><ol><li>Client A 主动向 Client B 发送 SYN&#x3D;1 的请求连接</li><li>Client B 向 Client A 发送 SYN&#x3D;1 的请求连接数据包，同时为了确认接收到了Client A 的 SYN，Client B 将 ACK&#x3D;1，表明确认收到了 Client A 的 SYN</li><li>Client A 给 Client B 回应的 ACK&#x3D;1 的确认报文</li></ol><h1 id="五、TCP的4次断开"><a href="#五、TCP的4次断开" class="headerlink" title="五、TCP的4次断开"></a>五、TCP的4次断开</h1><ol><li>CLient A 主动向 Client B 发送 FIN&#x3D;1 的请求断开连接</li><li>CLient B 首先向 CLient A 进行 ACK&#x3D;1 的确认响应</li><li>Client B 也向 Client A 发送 FIN&#x3D;1 的请求断开连接</li><li>CLient A 向 Client B 回复 ACK&#x3D;1 的响应报文</li></ol><h1 id="六、TCP的滑动窗口"><a href="#六、TCP的滑动窗口" class="headerlink" title="六、TCP的滑动窗口"></a>六、TCP的滑动窗口</h1><ol><li>TCP使用滑动窗口的概念来完成【流量控制】机制方式：与会双方在TCP 3 次握手完成之后，首先确定接收方的缓冲区大小，之后发送方与接收方缓冲区大小相等的数据给对端，接收方在缓冲区满载后开始逐个处理数据包，接收方的缓冲区会被逐渐放空，此时接收方使用滑动窗口的概念来动态的通知接收方调整数据发送的大小</li><li>TCP使用滑动窗口的概念来完成【拥塞管理】机制方式：在与会双方发送数据前先建立TCP3次握手，与会双方协商今后一次性传递的窗口大小，在协商成功后，发送方传递数据，而后发送方没有收到全部的 ACK 响应报文，但接收方依旧标称自身可接收之前协商好的窗口大小数据，此时，发送方可以确定，中间的链路出现拥塞，然后发送方自动调整一次性数据的发送大小</li></ol><h1 id="七、TCP中的四种计时器"><a href="#七、TCP中的四种计时器" class="headerlink" title="七、TCP中的四种计时器"></a>七、TCP中的四种计时器</h1><ol><li>重传计时器【60s】：为保证数据传送的可靠性，TCP要求接收方每收到一个数据包，就必须给发送方发送一个ACK的确认报文。若在重传计时器到时前，发送方依旧没有接收到接收方传送过来的ACK，则发送方将会重新传送上一个报文，直到发送方接收到了确认报文为止<ul><li><blockquote><p>i &#x3D; 90%<br> 上一次的 RTT * i +（1-i）* 此次的RTT值</p></blockquote></li></ul></li><li>坚持计时器【60s】：<ul><li>目的：为了防止零窗口死锁</li><li>工作过程：发送方向接收方传递2个窗口的数据，接收方发送ACK表明缓冲区已满，此时发送方将会开启一个坚持计时器，在坚持计时器到时前，若发送方接收到了接收方传送的后续ACK报文，则发送方复位计时器，继续传送后续报文；若在坚持计时器到时前，发送方没有接收到接收方所发送的后续ACK报文，则此时发送方将主动向接收方发送探测报文，询问是否可以接受后续报文</li></ul></li><li>保活计时器【2小时】：<ul><li>目的：为了防止一个TCP的过长的空连接</li><li>若某客户端与服务器建立了TCP3次握手后，在2小时内没有发起任何的通讯连接请求，则此时服务器将会主动向客户端发送10个【间隔75s】的探测数据段，若10个探测数据段过程结束后，客户端依旧没有响应，则服务器可主动中断连接，防止一个过长的TCP连接持续占用网络及服务器资源</li></ul></li><li>时间等待计时器【30s-2m】：<ul><li>目的：在TCP 4次断开时，若CLient A 在发送完最后一个ACK后立即断开连接，而此时的ACK报文，CLient B 并没有收到，则此时会出现：Client A 已经断开连接，而Client B却依旧保持连接的问题</li><li>解决方案：在Client A 发送完最后一个ACK后，不立即断开连接，而是等待一个2MSL【Max Segment Lifetime】时间，等到 Client B 已经断开连接后，Client A 在断开连接，保证与会双工均成功的结束通讯</li><li><code>注：TCP下的各种服务所使用的MSL时间亦不相同【30s-2m】</code></li></ul></li></ol><h1 id="八、UDP的头部格式"><a href="#八、UDP的头部格式" class="headerlink" title="八、UDP的头部格式"></a>八、UDP的头部格式</h1><ol><li>源端口号码</li><li>目标端口号码</li><li>16位的UDP长度</li><li>16位的UDP校验和【可选项，默认不使用】</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 网络层 </tag>
            
            <tag> HCIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIP -- 1 -- OSPF的多区域</title>
      <link href="/2023/10/22/HCIP/HCIP-1-OSPF%E7%9A%84%E5%A4%9A%E5%8C%BA%E5%9F%9F/"/>
      <url>/2023/10/22/HCIP/HCIP-1-OSPF%E7%9A%84%E5%A4%9A%E5%8C%BA%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="一、OSPF建立多区域的原因"><a href="#一、OSPF建立多区域的原因" class="headerlink" title="一、OSPF建立多区域的原因"></a>一、OSPF建立多区域的原因</h1><ol><li>为了实现网络的快速收敛</li><li>为了增强网络的可扩展性</li></ol><h1 id="二、OSPF中的路由器类型"><a href="#二、OSPF中的路由器类型" class="headerlink" title="二、OSPF中的路由器类型"></a>二、OSPF中的路由器类型</h1><ol><li>内部路由器：若以一个路由器的所有接口都工作在同一区域中，则该路由器被称为【内部路由器】</li><li>骨干路由器：若上述路由器工作在区域0中，则上述路由器也可以称之为【骨干路由器】</li><li>ABP【Area Border Router｜边界路由器】：用来工作在两个区域之间，负责在两个区域之间传递汇总信息使用的路由器</li><li>ASBR【Auto-System Border Router｜自治系统边界路由器】：用来运行两种或多种路由协议的路由器，在各个不同的路由协议之间传递路由信息时使用的</li></ol><h1 id="三、OSPF的区域类型"><a href="#三、OSPF的区域类型" class="headerlink" title="三、OSPF的区域类型"></a>三、OSPF的区域类型</h1><ol><li>骨干区域【area 0】</li><li>非骨干区域<ol><li>标准区域<ul><li>会将自身区域的域内路由通过ABR路由器传递给其他区域</li><li>会通过ABR路由器学习其他区域的域间路由</li><li>本区域可以包含ASBR路由器，会学医本区域自己引入的其他路由</li><li>会学习其他区域引入的外部路由【简单说就是啥都学习】</li><li>包含：<code>LSA-1, LSA-2, LSA-3, LSA-4, LSA-5</code></li></ul></li><li>末节区域【Stub Area】<ul><li>本区域内不包含ASBR路由器【也就意味着本区域不会学习并引入外部路由】</li><li>同时本区域也不学习其他区域引入的外部路由，而是使用一条缺省路由到达</li><li>末节区域指的是：该区域到达外部网络有且只有一个接口，会学习本区域内的域内路由，学习域间路由</li><li>包含：<code>LSA-1, LSA-2, LSA-3, LSA-4</code></li></ul></li><li>完全末节区域<ul><li>本区域内不包含ASBR路由器</li><li>自己不学习外部路由，也不学习其他区域引入的外部路由，也不学习域间路由</li><li>只学习本区域内的域内路由</li><li>完全末节区域内的路由器使用一条缺省路由来访问外部网络</li><li>包含：<code>LSA-1, LSA-2</code></li></ul></li><li>非纯末节区域【NSSA】<ul><li>会学习本区域自己引入的外部路由【意味着NSSA区域内可以包含ASBR路由器】</li><li>会学习本区域的域内路由和其他区域的域间路由</li><li>不学习其他区域引入的外部路由</li><li>增加一条缺省路由</li><li>包含：<code>LSA-1, LSA-2, LSA-3, LSA-4, LSA-7</code></li></ul></li><li>非纯完全末节区域：<ul><li>学习本区域内的域内路由</li><li>学习本区域自己引入的外部路由</li><li>不学习其他区域的域间路由</li><li>也不学习其他区域引入的外部路由</li><li>增加一条缺省路由</li></ul></li></ol></li></ol><h1 id="四、OSPF的LSDB【Link-State-DataBase｜链路状态数据库】中的LSA类型"><a href="#四、OSPF的LSDB【Link-State-DataBase｜链路状态数据库】中的LSA类型" class="headerlink" title="四、OSPF的LSDB【Link State DataBase｜链路状态数据库】中的LSA类型"></a>四、OSPF的LSDB【Link State DataBase｜链路状态数据库】中的LSA类型</h1><ol><li>OSPF中常见的LSA共有6种类型：<ol><li>路由器LSA【Type-1】：由每一台运行 OSPF 路由选择协议的路由器都会发出的，Type-1的LSA种包含：Router-ID、链路数量、每一条具体的明细路由</li><li>网络LSA【Type-2】：由网络中的DR【指定路由器】所发出的，用来向网络中的其它Drothers通告当前网络的变化</li><li>网络汇总【Type-3】：由网络中的 ABR【区域边界路由器】所发出的，用来在两个不同的区域之间相互传送汇总消息时使用的</li><li>ASBR汇总LSA【Type-4】：由网络中的 ABR【区域边界路由器】所发出的，用来向 OSPF 的内部路由器通告ASBR的路由器ID【RID】</li><li>自治系统外部LSA【Type-5】：由网络中的ASBR【自治系统边界路由器】所发出的；当ASBR将来自于其它路由选择协议的路由条目注入进 OSPF 内部时，ASBR 就将这些外部路由添加上Type-5的标记，这样一来 OSPF 内部的路由器就都能明白该条路由来自于其它的路由选择协议</li><li>NSSA外部LSA【Type-7】：由 NSSA 区域内的 ASBR 路由器所引入的外部路由，按照Tpye-7的方式注入进 OSPF 内部；Type-7的路由仅仅会在NSSA区域内泛洪，当Type-7的路由来到 ABR 上时，ABR会将Type-7的路由转换成Type-5的路由，然后在继续向其他区域传递。</li></ol></li></ol><p><img src="/../../images/HCIP/OSPF/LSA.png" alt="LSA"></p><h1 id="五、OSPF的外部路由计算方式"><a href="#五、OSPF的外部路由计算方式" class="headerlink" title="五、OSPF的外部路由计算方式"></a>五、OSPF的外部路由计算方式</h1><ul><li>OSPF在计算外部路由到达时由两种方式：<ol><li>O_E1：在计算时，同时计算OSPF的内部代价和外部代价的总和</li><li>O_E2：在计算时，只计算OSPF的外部代价之和，不计算内部代价【对于O_E2的计算方式而言，OSPF的内部代价完全一样】</li></ol></li></ul><h1 id="六、OSPF的虚链路"><a href="#六、OSPF的虚链路" class="headerlink" title="六、OSPF的虚链路"></a>六、OSPF的虚链路</h1><ol><li>按照 OSPF 的最初的协议设定，任何的非骨干网络必须域骨干区域通过一台ABR直连，若不直连，则无法通讯</li><li>后来 OSPF 做出的改进，其允许一个非骨干区域经过另一个非骨干区域，与骨干区域连接，采用的方式为：虚链路【vlink】</li><li>vlink 配置在两台 ABR 之间，在两台 ABR 之间建立一个虚拟链接，令孤立的的非骨干区域可以与骨干区域相连</li></ol><h1 id="七、OSPF的手工汇总"><a href="#七、OSPF的手工汇总" class="headerlink" title="七、OSPF的手工汇总"></a>七、OSPF的手工汇总</h1><ul><li>OSPF 支持在区域下配置手工汇总</li><li>在华为的网络设备上，OSPF 可以支持两种汇总方式：<ol><li>ARB-SUMMARY</li><li>ASBR-SUMMARY</li></ol></li></ul><h1 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h1><h3 id="双向重注入"><a href="#双向重注入" class="headerlink" title="双向重注入"></a>双向重注入</h3><p><img src="/../../images/HCIP/OSPF/%E5%8F%8C%E5%90%91%E9%87%8D%E6%B3%A8%E5%85%A5.png" alt="双向重注入"></p><p><strong>AR1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>AR1-ospf-1<span class="token punctuation">]</span>area <span class="token number">1</span><span class="token punctuation">[</span>AR1-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>network <span class="token number">192.168</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR1-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>network <span class="token number">10.1</span>.1.0 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR2</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>AR2-ospf-1<span class="token punctuation">]</span>area <span class="token number">1</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>network <span class="token number">10.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR2-ospf-1<span class="token punctuation">]</span>area <span class="token number">0</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">20.1</span>.1.0 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR3</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>AR3-ospf-1<span class="token punctuation">]</span>area <span class="token number">0</span><span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">20.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">30.1</span>.1.0 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR4</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>AR4-ospf-1<span class="token punctuation">]</span>area <span class="token number">0</span><span class="token punctuation">[</span>AR4-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">30.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR4-ospf-1<span class="token punctuation">]</span>area <span class="token number">2</span><span class="token punctuation">[</span>AR4-ospf-1-area-0.0.0.2<span class="token punctuation">]</span>network <span class="token number">40.1</span>.1.0 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR5</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR5<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>AR5-ospf-1<span class="token punctuation">]</span>area <span class="token number">2</span><span class="token punctuation">[</span>AR5-ospf-1-area-0.0.0.2<span class="token punctuation">]</span>network <span class="token number">40.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR5<span class="token punctuation">]</span>rip<span class="token punctuation">[</span>AR5-rip-1<span class="token punctuation">]</span>version <span class="token number">2</span><span class="token punctuation">[</span>AR5-rip-1<span class="token punctuation">]</span>network <span class="token number">50.0</span>.0.0<span class="token punctuation">[</span>AR5-rip-1<span class="token punctuation">]</span>undo summary <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR6</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR6<span class="token punctuation">]</span>rip<span class="token punctuation">[</span>AR6-rip-1<span class="token punctuation">]</span>version <span class="token number">2</span><span class="token punctuation">[</span>AR6-rip-1<span class="token punctuation">]</span>network <span class="token number">50.0</span>.0.0<span class="token punctuation">[</span>AR6-rip-1<span class="token punctuation">]</span>network <span class="token number">172.16</span>.0.0<span class="token punctuation">[</span>AR6-rip-1<span class="token punctuation">]</span>undo summary <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ASBR-注入"><a href="#ASBR-注入" class="headerlink" title="ASBR 注入"></a>ASBR 注入</h4><p><strong>注入RIP</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR5-ospf-1<span class="token punctuation">]</span>import-route rip <span class="token number">1</span> cost <span class="token number">2</span>  <span class="token comment">#计算方式 O_E2</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">16</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">16</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token comment">#1.1.1.1/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token comment">#10.1.1.0/24  Direct  0    0           D   10.1.1.1        GigabitEthernet0/0/0</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>       <span class="token comment">#20.1.1.0/24  OSPF    10   2           D   10.1.1.2        GigabitEthernet0/0/0</span>       <span class="token comment">#30.1.1.0/24  OSPF    10   3           D   10.1.1.2        GigabitEthernet0/0/0</span>       <span class="token comment">#40.1.1.0/24  OSPF    10   4           D   10.1.1.2        GigabitEthernet0/0/0</span>       <span class="token number">50.1</span>.1.0/24  O_ASE   <span class="token number">150</span>  <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>     <span class="token number">172.16</span>.1.0/24  O_ASE   <span class="token number">150</span>  <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0    <span class="token comment">#192.168.1.0/24  Direct  0    0           D   192.168.1.1     GigabitEthernet0/0/1</span>    <span class="token comment">#192.168.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>  <span class="token comment">#192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR5-ospf-1<span class="token punctuation">]</span>import-route rip <span class="token number">1</span> cost <span class="token number">2</span> <span class="token builtin class-name">type</span> <span class="token number">1</span>    <span class="token comment">#更改计算方式为 O_E1</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">16</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">16</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token comment">#1.1.1.1/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token comment">#10.1.1.0/24  Direct  0    0           D   10.1.1.1        GigabitEthernet0/0/0</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>       <span class="token comment">#20.1.1.0/24  OSPF    10   2           D   10.1.1.2        GigabitEthernet0/0/0</span>       <span class="token comment">#30.1.1.0/24  OSPF    10   3           D   10.1.1.2        GigabitEthernet</span>       <span class="token comment">#40.1.1.0/24  OSPF    10   4           D   10.1.1.2        GigabitEthernet0/0/0</span>       <span class="token number">50.1</span>.1.0/24  O_ASE   <span class="token number">150</span>  <span class="token number">6</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>     <span class="token number">172.16</span>.1.0/24  O_ASE   <span class="token number">150</span>  <span class="token number">6</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0    <span class="token comment">#192.168.1.0/24  Direct  0    0           D   192.168.1.1     GigabitEthernet0/0/1</span>    <span class="token comment">#192.168.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>  <span class="token comment">#192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注入OSPF</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR5-rip-1<span class="token punctuation">]</span>import-route ospf <span class="token number">1</span> cost <span class="token number">4</span><span class="token punctuation">[</span>AR6<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">16</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">16</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token comment">#6.6.6.6/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token number">10.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">5</span>           D   <span class="token number">50.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">20.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">5</span>           D   <span class="token number">50.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">30.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">5</span>           D   <span class="token number">50.1</span>.1.1        GigabitEthernet0/0/1       <span class="token number">40.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">5</span>           D   <span class="token number">50.1</span>.1.1        GigabitEthernet0/0/1       <span class="token comment">#50.1.1.0/24  Direct  0    0           D   50.1.1.2        GigabitEthernet0/0/1</span>       <span class="token comment">#50.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>     <span class="token comment">#50.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>     <span class="token comment">#172.16.1.0/24  Direct  0    0           D   172.16.1.1      GigabitEthernet0/0/0</span>     <span class="token comment">#172.16.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>   <span class="token comment">#172.16.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>    <span class="token number">192.168</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">5</span>           D   <span class="token number">50.1</span>.1.1        GigabitEthernet0/0/1<span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试连通性</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">172.16</span>.1.10Ping <span class="token number">172.16</span>.1.10: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">122</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">122</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">122</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">122</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">46</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">122</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> ms--- <span class="token number">172.16</span>.1.10 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">31</span>/34/46 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="虚链路"><a href="#虚链路" class="headerlink" title="虚链路"></a>虚链路</h3><p><img src="/../../images/HCIP/OSPF/%E8%99%9A%E9%93%BE%E8%B7%AF%E5%92%8C%E6%89%8B%E5%B7%A5%E6%B1%87%E6%80%BB.png" alt="虚链路和手工汇总"></p><p><strong>ospf软重启</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>reset ospf <span class="token number">1</span> process<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置虚链路"><a href="#配置虚链路" class="headerlink" title="配置虚链路"></a>配置虚链路</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在R4和R5上配置虚链路</span><span class="token punctuation">[</span>AR4-ospf-1-area-0.0.0.2<span class="token punctuation">]</span>vlink-peer <span class="token number">5.5</span>.5.5<span class="token punctuation">[</span>AR5-ospf-1-area-0.0.0.2<span class="token punctuation">]</span>vlink-peer <span class="token number">4.4</span>.4.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="双向重注入-1"><a href="#双向重注入-1" class="headerlink" title="双向重注入"></a>双向重注入</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在R2和R6上配置双向重注入</span><span class="token comment">#R2</span><span class="token punctuation">[</span>AR2-ospf-1<span class="token punctuation">]</span>import-route rip <span class="token number">1</span> cost <span class="token number">2</span> <span class="token builtin class-name">type</span> <span class="token number">1</span><span class="token comment">#修改计算类型为O_E1</span><span class="token punctuation">[</span>AR2-rip-1<span class="token punctuation">]</span>import-route ospf <span class="token number">1</span> cost <span class="token number">2</span><span class="token comment">#R6</span><span class="token punctuation">[</span>AR6-ospf-1<span class="token punctuation">]</span>import-route rip <span class="token number">2</span> cost <span class="token number">3</span> <span class="token builtin class-name">type</span> <span class="token number">1</span><span class="token punctuation">[</span>AR6-rip-2<span class="token punctuation">]</span>import-route ospf <span class="token number">1</span> cost <span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试连通性</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>ping <span class="token number">172.16</span>.1.2  PING <span class="token number">172.16</span>.1.2: <span class="token number">56</span>  data bytes, press CTRL_C to <span class="token builtin class-name">break</span>    Request <span class="token function">time</span> out    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">250</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">250</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">250</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">250</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">40</span> ms  --- <span class="token number">172.16</span>.1.2 <span class="token function">ping</span> statistics ---    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted    <span class="token number">4</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received    <span class="token number">20.00</span>% packet loss    round-trip min/avg/max <span class="token operator">=</span> <span class="token number">40</span>/47/50 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置末节区域"><a href="#配置末节区域" class="headerlink" title="配置末节区域"></a>配置末节区域</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#本区域内不包含ASBR路由器【也就意味着本区域不会学习并引入外部路由】</span><span class="token comment">#同时本区域也不学习其他区域引入的外部路由，而是使用一条缺省路由到达</span><span class="token comment">#末节区域指的是：该区域到达外部网络有且只有一个接口，会学习本区域内的域内路由，学习域间路由</span><span class="token punctuation">[</span>AR2-GigabitEthernet0/0/1<span class="token punctuation">]</span>shutdown <span class="token comment">#关闭AR2的g0/0/1接口，因为末节区域内不包含ASBR路由器</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>stub<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>stub  <span class="token comment">#AR3也在area 1中，所以他也要配置</span><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token number">0.0</span>.0.0/0   OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0<span class="token comment">#配置为末节区域后，自动添加一条缺省路由，指向10.1.1.2</span>        <span class="token comment">#2.2.2.2/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0 <span class="token comment">#area 1</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>       <span class="token number">20.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 0</span>       <span class="token number">30.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">3</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 2</span>       <span class="token number">40.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">4</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 3</span>      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#rip2的路由没有了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置完全末节区域"><a href="#配置完全末节区域" class="headerlink" title="配置完全末节区域"></a>配置完全末节区域</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#本区域内不包含ASBR路由器</span><span class="token comment">#自己不学习外部路由，也不学习其他区域引入的外部路由，也不学习域间路由</span><span class="token comment">#只学习本区域内的域内路由</span><span class="token comment">#完全末节区域内的路由器使用一条缺省路由来访问外部网络</span><span class="token punctuation">[</span>AR2-GigabitEthernet0/0/1<span class="token punctuation">]</span>shutdown <span class="token comment">#关闭AR2的g0/0/1接口，因为完全末节区域内不包含ASBR路由器</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>stub no-summary<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>stub no-summary<span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">9</span>        Routes <span class="token builtin class-name">:</span> <span class="token number">9</span>        Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token number">0.0</span>.0.0/0   OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0        <span class="token comment">#2.2.2.2/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0   <span class="token comment">#area 1</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#只有区域内路由和缺省路由</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>ping <span class="token number">172.16</span>.1.2  PING <span class="token number">172.16</span>.1.2: <span class="token number">56</span>  data bytes, press CTRL_C to <span class="token builtin class-name">break</span>    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">251</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">50</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">251</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">40</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">251</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">40</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">251</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">40</span> ms    Reply from <span class="token number">172.16</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">251</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">40</span> ms  --- <span class="token number">172.16</span>.1.2 <span class="token function">ping</span> statistics ---    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received    <span class="token number">0.00</span>% packet loss    round-trip min/avg/max <span class="token operator">=</span> <span class="token number">40</span>/42/50 ms<span class="token comment">#依然可以和172.16.1.2通信</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="非纯末节区域"><a href="#非纯末节区域" class="headerlink" title="非纯末节区域"></a>非纯末节区域</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#会学习本区域自己引入的外部路由【意味着NSSA区域内可以包含ASBR路由器】</span><span class="token comment">#会学习本区域的域内路由和其他区域的域间路由</span><span class="token comment">#不学习其他区域引入的外部路由</span><span class="token comment">#增加一条缺省路由</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>nssa<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>nssa<span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">15</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">15</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token number">0.0</span>.0.0/0   O_NSSA  <span class="token number">150</span>  <span class="token number">1</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0        <span class="token comment">#2.2.2.2/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0   <span class="token comment">#area 1</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>       <span class="token number">20.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 0</span>       <span class="token number">30.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">3</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 2</span>       <span class="token number">40.1</span>.1.0/24  OSPF    <span class="token number">10</span>   <span class="token number">4</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0   <span class="token comment">#area 3</span>      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>    <span class="token number">192.168</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">192.168</span>.1.2     GigabitEthernet0/0/1   <span class="token comment">#rip 1</span>    <span class="token comment">#192.168.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>  <span class="token comment">#192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#rip2的路由没有了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="非纯完全末节区域"><a href="#非纯完全末节区域" class="headerlink" title="非纯完全末节区域"></a>非纯完全末节区域</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#学习本区域内的域内路由</span><span class="token comment">#学习本区域自己引入的外部路由</span><span class="token comment">#不学习其他区域的域间路由</span><span class="token comment">#也不学习其他区域引入的外部路由</span><span class="token comment">#增加一条缺省路由</span><span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>nssa no-summary<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>nssa no-summary<span class="token punctuation">[</span>AR2-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        <span class="token number">0.0</span>.0.0/0   OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet0/0/0        <span class="token comment">#2.2.2.2/32  Direct  0    0           D   127.0.0.1       LoopBack0</span>       <span class="token number">10.1</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/0   <span class="token comment">#area 1</span>       <span class="token comment">#10.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>     <span class="token comment">#10.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/0</span>      <span class="token comment">#127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span>      <span class="token comment">#127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span>    <span class="token number">192.168</span>.1.0/24  Direct  <span class="token number">0</span>    <span class="token number">0</span>           D   <span class="token number">192.168</span>.1.2     GigabitEthernet0/0/1   <span class="token comment">#rip1</span>    <span class="token comment">#192.168.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span>  <span class="token comment">#192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1</span><span class="token comment">#255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><span class="token comment">#只有区域内路由和rip 1路由</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="地址汇总"><a href="#地址汇总" class="headerlink" title="地址汇总"></a>地址汇总</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#AR2</span><span class="token punctuation">[</span>AR2-LoopBack1<span class="token punctuation">]</span>ip address <span class="token number">88.88</span>.88.88 <span class="token number">24</span><span class="token comment">#AR3</span><span class="token punctuation">[</span>AR3<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">17</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">17</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface        ······    <span class="token number">88.88</span>.88.88/32  OSPF    <span class="token number">10</span>   <span class="token number">1</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet0/0/1    ······<span class="token comment">#AR4</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">17</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">17</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface    ······    <span class="token number">88.88</span>.88.88/32  OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet0/0/1    ······<span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>abr-summary <span class="token number">88.88</span>.0.0 <span class="token number">255.255</span>.0.0<span class="token comment">#AR4</span><span class="token punctuation">[</span>AR4<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">17</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">17</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface      ······      <span class="token number">88.88</span>.0.0/16  OSPF    <span class="token number">10</span>   <span class="token number">2</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/1      ······<span class="token comment">#汇总之后AR4学到的是主路由</span><span class="token comment">#AR3</span><span class="token punctuation">[</span>AR3-ospf-1-area-0.0.0.1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">17</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">17</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface    ······    <span class="token number">88.88</span>.88.88/32  OSPF    <span class="token number">10</span>   <span class="token number">1</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/1    ······<span class="token comment">#汇总之后AR3的学到的还是之前路由</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> OSPF </tag>
            
            <tag> HCIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 16 -- AAA</title>
      <link href="/2023/09/13/HCIA/HCIA-16-AAA/"/>
      <url>/2023/09/13/HCIA/HCIA-16-AAA/</url>
      
        <content type="html"><![CDATA[<h1 id="一、AAA的基本概念"><a href="#一、AAA的基本概念" class="headerlink" title="一、AAA的基本概念"></a>一、AAA的基本概念</h1><ol><li>认证【Authentication】：在启用AAA功能后，认证功能是必须要配置的，它完成了向用户提问【你是谁】的作用。</li><li>授权【Authorization】：在启用AAA功能后，授权、并不是必须要配置的，它完成了向用户提问【你能做什么】的作用。</li><li>审计【Accounting】：在启用AAA功能后，审计并不是必须要配置的，它完成了向用户提问【你都做了什么】的作用。</li></ol><h1 id="二、AAA常见的网络架构"><a href="#二、AAA常见的网络架构" class="headerlink" title="二、AAA常见的网络架构"></a>二、AAA常见的网络架构</h1><p><img src="/../../images/HCIA/AAA/AAA%E7%9A%84%E5%B8%B8%E8%A7%81%E6%9E%B6%E6%9E%84.png" alt="AAA的常见架构"></p><ol><li>AAA既可以在路由器本地做验证、授权；也可以去连接一台专用的AAA服务器。</li><li>若AAA在路由器本地做验证，则路由器需要自主创建用户账户与授权命令。</li><li>若AAA是在AAA服务器上完成的，则路由器将全部的终端用户请求发送至AAA服务器，AAA服务器进行验证，之后将验证结果通知路由器。</li></ol><p><code>注：在AAA的场景中，路由器称之为：客户端；AAA Server 称之为：服务器；访问用户称之为：终端用户</code></p><h1 id="三、AAA的认证"><a href="#三、AAA的认证" class="headerlink" title="三、AAA的认证"></a>三、AAA的认证</h1><ol><li>不认证：相当于丧失了全部的网络安全特性，不建议。</li><li>本地认证：在路由器本地数据库中对用户进行认证。</li><li>远端认证：在AAA服务器上进行认证，回传认证结果。</li></ol><h1 id="四、AAA的授权"><a href="#四、AAA的授权" class="headerlink" title="四、AAA的授权"></a>四、AAA的授权</h1><ol><li>不授权：相当于是以管理员身份进入，能够配置所有内容。</li><li>本地授权：在路由器本地数据库中对已经登录的用户进行授权。</li><li>远端授权：在AAA服务器上进行授权，回传结果给路由器，路由器通知终端用户。</li></ol><h1 id="五、AAA的审计"><a href="#五、AAA的审计" class="headerlink" title="五、AAA的审计"></a>五、AAA的审计</h1><ol><li>不审计：相当于不对用户所做的任何操作做记录。</li><li>远端审计：在AAA服务器上做审计，不能在路由器本地做审计。</li></ol><h1 id="六、RADIUS与TACAS协议"><a href="#六、RADIUS与TACAS协议" class="headerlink" title="六、RADIUS与TACAS协议"></a>六、RADIUS与TACAS协议</h1><ol><li>RADIUS协议是公有协议，各个友商设备均支持，只不过各个友商都对RADIUS协议做了私有化的改进。</li><li>TACACS协议时Cisco的私有协议，华为也对TACACS协议进行了私有化的改进——HWTACACS</li><li>RADIUS协议与TACACS的区别：<ol><li>RADIUS是基于UDP的协议开发的【不保证可靠性】，在网络中断又恢复后，不会自动连接，需要管理员手动连接，同时仅仅只能对1台设备提供AAA的功能。</li><li>TACACS是基于TCP的协议开发的【保证可靠性】，能够在网络重新恢复后自动连接；TACACS能够同时为多个网络设备提供AAA的功能。</li></ol></li></ol><p><code>注：华为的网络设备在配置AAA时，使用的端口号码为1812</code></p><h1 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h1>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> AAA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 15 -- PPP</title>
      <link href="/2023/09/09/HCIA/HCIA-15-PPP/"/>
      <url>/2023/09/09/HCIA/HCIA-15-PPP/</url>
      
        <content type="html"><![CDATA[<h1 id="一、PPP的基本概念"><a href="#一、PPP的基本概念" class="headerlink" title="一、PPP的基本概念"></a>一、PPP的基本概念</h1><ol><li>PPP【Point to Point Protocol】是属于数据链路层协议，不会因IP的问题导致down掉，PPP的连接建立完全依靠数据链路层的MAC</li><li>PPP的前身SLTP【Serial Line Internet Protocol｜串行链路互联网协议】</li><li>SLIP的缺点：<ol><li>SLIP不支持地址自动协商，需要用户自行配置</li><li>SLIP只支持IP协议，在其数据包中，不包含协议字段，因此其无法支持IPX、Appletalk、MPLS</li><li>SLIP不支持校验功能，无法对传输的数据进行校验和检测</li><li>1989年，PPP被正式提出，1994年成为互联网标准协议之一</li></ol></li></ol><h1 id="二、PPP的优势"><a href="#二、PPP的优势" class="headerlink" title="二、PPP的优势"></a>二、PPP的优势</h1><ol><li>PPP同时支持同步传输与异步传输通信</li><li>支持各种各样的网络层协议【IP、IPX、AppleTalk、MPLS】</li><li>支持地址的自动协商</li><li>支持数据的校验和检测</li><li>支持PAP、CHAP这两种用户验证</li><li>支持数据压缩【仅对有效的载荷数据进行压缩】</li></ol><h1 id="三、PPP的组成"><a href="#三、PPP的组成" class="headerlink" title="三、PPP的组成"></a>三、PPP的组成</h1><p><img src="/../../images/HCIA/PPP/PPP%E7%9A%84%E7%BB%84%E6%88%90.png" alt="PPP的组成.png"></p><ol><li>PPP是由3个部分组成的<ol><li>物理层的封装报文的方式【同步传输&#x2F;异步传输】</li><li>LCP【Link Control-Protocol｜链路控制协议】：用来建立、维护、配置、终止一段数据链路层的协议</li><li>NCP【Network Control-Protocol｜网络控制协议】：用来在一个已经建立完连接的PPP网络上进行IP层的协商与通讯</li></ol></li></ol><h1 id="四、PPP链路的建立"><a href="#四、PPP链路的建立" class="headerlink" title="四、PPP链路的建立"></a>四、PPP链路的建立</h1><p><img src="/../../images/HCIA/PPP/PPP%E9%93%BE%E8%B7%AF%E7%9A%84%E5%BB%BA%E7%AB%8B.png" alt="PPP链路的建立"></p><ol><li>物理链路不可用阶段</li><li>数据链路层的链路建立阶段</li><li>提交用户认证阶段</li><li>认证成功进入网络协商阶段</li><li>若认证失败则进入链路终止阶段</li></ol><h1 id="五、PPP的帧格式"><a href="#五、PPP的帧格式" class="headerlink" title="五、PPP的帧格式"></a>五、PPP的帧格式</h1><p><img src="/../../images/HCIA/PPP/PPP%E7%9A%84%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="PPP的帧格式"></p><h1 id="六、PPP支持2种认证"><a href="#六、PPP支持2种认证" class="headerlink" title="六、PPP支持2种认证"></a>六、PPP支持2种认证</h1><ol><li>PAP【Password Authentication Protocol｜口令认证协议】<ul><li>PAP是2次握手认证协议</li><li>由被认证方主动发起认证请求</li><li>所有的用户名及密钥均使用明文方式传递</li></ul></li><li>CHAP【Challenge HandShake Authentication Protocol｜质询握手认证协议】<ul><li>CHAP时3次握手认证协议</li><li>由主认证方首先发起认证请求</li><li>主&#x2F;被双方相互验证</li><li>密钥并不直接发送，而是使用三次握手过程中保持不变的ID值，主认证方随机生成的数据，以及双方共同知道的密钥，合在一起，使用HASH的MD5进行加密，加密之后再发送</li></ul></li></ol><h1 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h1><h2 id="PAP"><a href="#PAP" class="headerlink" title="PAP"></a>PAP</h2><p><img src="/../../images/HCIA/PPP/pap.png" alt="pap"></p><p><strong>被认证方</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1-Serial1/0/0<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.1 <span class="token number">30</span><span class="token punctuation">[</span>AR1-Serial1/0/0<span class="token punctuation">]</span>link-protocol ppp <span class="token comment">#修改链路协议</span><span class="token punctuation">[</span>AR1-Serial1/0/0<span class="token punctuation">]</span>ppp pap local-user AR1     password   cipher   <span class="token number">123456</span><span class="token comment">#                                   username          是否加密      password</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>主认证方</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>aaa <span class="token comment">#配置数据库</span><span class="token punctuation">[</span>AR2-aaa<span class="token punctuation">]</span>local-user AR1 password cipher <span class="token number">123456</span> <span class="token comment">#保持被认证方的用户名和密码</span><span class="token punctuation">[</span>AR2-aaa<span class="token punctuation">]</span>local-user AR1 service-type ppp <span class="token comment">#指定 AR1 用户的服务类型</span><span class="token punctuation">[</span>AR2-Serial1/0/0<span class="token punctuation">]</span>link-protocol ppp<span class="token punctuation">[</span>AR2-Serial1/0/0<span class="token punctuation">]</span>ppp authentication-mode pap <span class="token comment">#指定ppp的认证模式</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>验证</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>debugging ppp pap all<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>terminal debugging <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:51-08:00 AR2 %%01IFPDT/4/IF_STATE<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>:Interface Serial1/0/0 has turned into UP state.<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53-08:00 AR2 %%01IFNET/4/LINK_STATE<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>:The line protocol PPP on the interface Serial1/0/0 has entered the UP state. <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.838.3-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial1/0/0 PAP Initial  Event       state Initial <span class="token comment">#初始化状态</span><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.838.4-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial1/0/0 PAP Server Lower Up Event       state Initial <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.838.5-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial1/0/0 PAP <span class="token builtin class-name">:</span> Initial --<span class="token operator">></span> ServerListen <span class="token comment">#服务器的监听状态</span><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.1-08:00 AR2 PPP/7/debug2:  PPP Packet:       Serial1/0/0 Input  PAP<span class="token punctuation">(</span>c023<span class="token punctuation">)</span> Pkt, Len <span class="token number">19</span>       State ServerListen, code Request<span class="token punctuation">(</span>01<span class="token punctuation">)</span>, <span class="token function">id</span> <span class="token number">1</span>, len <span class="token number">15</span>       Host Len:  <span class="token number">3</span>  Name:AR1 <span class="token comment">#用户名 AR1</span><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.2-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial1/0/0 PAP Receive Request Event <span class="token comment">#接收认证请求</span>      state ServerListen <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.3-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial1/0/0 PAP <span class="token builtin class-name">:</span> ServerListen --<span class="token operator">></span> WaitAAA <span class="token comment">#等待AAA验证</span><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.4-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial1/0/0 PAP AAA Result Event       state WaitAAA <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.5-08:00 AR2 PPP/7/debug2:  PPP Packet:       Serial1/0/0 Output PAP<span class="token punctuation">(</span>c023<span class="token punctuation">)</span> Pkt, Len <span class="token number">52</span>       State WaitAAA, code Ack<span class="token punctuation">(</span>02<span class="token punctuation">)</span>, <span class="token function">id</span> <span class="token number">1</span>, len <span class="token number">48</span>       Msg Len: <span class="token number">43</span>  Msg:Welcome to use Quidway ROUTER, Huawei Tech.<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53.858.6-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial1/0/0 PAP <span class="token builtin class-name">:</span> WaitAAA --<span class="token operator">></span> ServerSuccess <span class="token comment">#认证成功</span><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep  <span class="token number">9</span> <span class="token number">2023</span> <span class="token number">22</span>:45:53-08:00 AR2 %%01IFNET/4/LINK_STATE<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>:The line protocol PPP IPCP on the interface Serial1/0/0 has entered the UP state. <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CHAP"><a href="#CHAP" class="headerlink" title="CHAP"></a>CHAP</h2><p><img src="/../../images/HCIA/PPP/chap.png" alt="chap"></p><p><strong>被认证方</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1-Serial4/0/0<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.1 <span class="token number">30</span><span class="token punctuation">[</span>AR1-Serial4/0/0<span class="token punctuation">]</span>link-protocol ppp<span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>aaa <span class="token comment">#本地数据库</span><span class="token punctuation">[</span>AR1-aaa<span class="token punctuation">]</span>local-user AR2 password cipher abc123456 <span class="token comment">#主认证方用户名和密码</span><span class="token punctuation">[</span>AR1-aaa<span class="token punctuation">]</span>local-user AR2 service-type ppp <span class="token comment">#设置 AR2的服务类型为 PPP</span><span class="token punctuation">[</span>AR1-Serial4/0/0<span class="token punctuation">]</span>ppp chap user AR1 <span class="token comment">#设置被认证方的认证名称为 AR1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>主认证方</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR2-Serial4/0/0<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.2 <span class="token number">30</span><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>aaa<span class="token punctuation">[</span>AR2-aaa<span class="token punctuation">]</span>local-user AR1 password cipher abc123456<span class="token punctuation">[</span>AR2-aaa<span class="token punctuation">]</span>local-user AR1 service-type ppp<span class="token punctuation">[</span>AR2-Serial4/0/0<span class="token punctuation">]</span>ppp authentication-mode chap <span class="token comment">#设置 AR2 的认证方式为 chap</span><span class="token punctuation">[</span>AR2-Serial4/0/0<span class="token punctuation">]</span>ppp chap user AR2 <span class="token comment">#设置主认证方对认证名称为 AR2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>验证</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>debugging ppp chap all<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>terminal debugging <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.6.3-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial4/0/0 CHAP Initial Event       state Initial <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.6.4-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial4/0/0 CHAP Server Lower Up  Event       state Initial <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.6.5-08:00 AR2 PPP/7/debug2:  PPP Packet:       Serial4/0/0 Output CHAP<span class="token punctuation">(</span>c223<span class="token punctuation">)</span> Pkt, Len <span class="token number">28</span>       State Initial, code Challenge<span class="token punctuation">(</span>01<span class="token punctuation">)</span>, <span class="token string">'id 1'</span>, len <span class="token number">24</span>       Value_Size:  <span class="token number">16</span>  Value: <span class="token number">35</span> <span class="token number">53</span>  <span class="token number">8</span> <span class="token number">13</span> b8 1c 1c <span class="token number">28</span> fb c2 <span class="token number">35</span> 5e b4 9a b4 <span class="token number">98</span>       Name: AR2<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.6.6-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial4/0/0 CHAP <span class="token builtin class-name">:</span> Initial --<span class="token operator">></span> SendChallenge <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.1-08:00 AR2 PPP/7/debug2:  PPP Packet:       Serial4/0/0 Input  CHAP<span class="token punctuation">(</span>c223<span class="token punctuation">)</span> Pkt, Len <span class="token number">28</span>       State SendChallenge, code Response<span class="token punctuation">(</span>02<span class="token punctuation">)</span>, <span class="token function">id</span> <span class="token number">1</span>, len <span class="token number">24</span>       Value_Size:  <span class="token number">16</span>  Value: <span class="token number">10</span> <span class="token number">66</span> 1d bd 8c ee <span class="token number">69</span> 9d <span class="token builtin class-name">cd</span> a0 <span class="token number">66</span> c7 f3 eb  <span class="token number">2</span> 1b       Name: AR1<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.2-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial4/0/0 CHAP Receive Response Event       state SendChallenge <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.3-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial4/0/0 CHAP <span class="token builtin class-name">:</span> SendChallenge --<span class="token operator">></span> WaitAAA <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.4-08:00 AR2 AAA/7/DEBUG: <span class="token punctuation">[</span>AAA EVENT<span class="token punctuation">]</span>AAA_MAIN-<span class="token operator">></span>AAA_AUTHEN:NormalAuthenReq <span class="token comment">#认证结果是一样的</span>    CID:0 Result:0 Info:3010195652<span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.5-08:00 AR2 PPP/7/debug2:  PPP Event:       Serial4/0/0 CHAP AAA Result Event       state WaitAAA <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.6-08:00 AR2 PPP/7/debug2:  PPP State Change:       Serial4/0/0 CHAP <span class="token builtin class-name">:</span> WaitAAA --<span class="token operator">></span> ServerSuccess <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span>Sep <span class="token number">16</span> <span class="token number">2023</span> <span class="token number">17</span>:17:23.26.7-08:00 AR2 PPP/7/debug2:  PPP Packet:       Serial4/0/0 Output CHAP<span class="token punctuation">(</span>c223<span class="token punctuation">)</span> Pkt, Len <span class="token number">23</span>       State ServerSuccess, code SUCCESS<span class="token punctuation">(</span>03<span class="token punctuation">)</span>, <span class="token function">id</span> <span class="token number">1</span>, len <span class="token number">19</span>       Message: Welcome to AR2. <span class="token operator">&lt;</span>AR<span class="token operator"><span class="token file-descriptor important">2</span>></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> PPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 14 -- NAT</title>
      <link href="/2023/09/08/HCIA/HCIA-14-NAT/"/>
      <url>/2023/09/08/HCIA/HCIA-14-NAT/</url>
      
        <content type="html"><![CDATA[<h1 id="一、NAT的技术背景"><a href="#一、NAT的技术背景" class="headerlink" title="一、NAT的技术背景"></a>一、NAT的技术背景</h1><ol><li>IPv4地址日益紧缺，过度至IPv6需要花费大量时间，因此需要一些过渡性技术。</li><li>内网用户使用内部私有地址进行互联，但是私有地址不会被ISP的设备路由，无法访问Internet。</li><li>公司从ISP租用一个固定的公有IP地址，将该IP地址配置在路由器的外网接口上，当内部用户想要访问Internet时，路由器负责将私有地址转换为外网的公有IP地址，实现地址转化的效果。</li><li>NAT具有很好的隐藏内部私有IP地址的作用，包含内网安全性。</li><li>NAT具有端口映射的能力，能够将内部服务器的IP及端口映射在外网接口上，从而实现内网服务器向外网用户提供服务的功能。</li></ol><h1 id="二、NAT的工作原理"><a href="#二、NAT的工作原理" class="headerlink" title="二、NAT的工作原理"></a>二、NAT的工作原理</h1><ol><li>NAT与ACL一样，都关注第三层【IP头部】与第四层【TCP&#x2F;UDP头部】</li><li>NAT在转换时，只转换IP地址，不会转换端口号码。</li></ol><p><code>注：路由器在提供NAT服务时，会使用自身借口的IP地址替换用户的源IP地址，但是不会替换和更改端口号码；路由器要依靠不同的端口号码来区分不同的响应报文该回复给哪个客户。</code></p><h1 id="三、网络地址转换的方式"><a href="#三、网络地址转换的方式" class="headerlink" title="三、网络地址转换的方式"></a>三、网络地址转换的方式</h1><ol><li>静态转换</li><li>动态转换</li><li>Easy IP</li><li>NATP【端口多路复用】</li></ol><h1 id="四、NAT的四个关键性术语"><a href="#四、NAT的四个关键性术语" class="headerlink" title="四、NAT的四个关键性术语"></a>四、NAT的四个关键性术语</h1><ol><li>内部局部地址【Inside Local】：私有地址</li><li>外部局部地址【Outside Local】：公有地址</li><li>内部全局地址【Inside Global】：公有地址</li><li>外部全局地址【Outside Global】：公有地址</li></ol><h1 id="五、NAT的优缺点"><a href="#五、NAT的优缺点" class="headerlink" title="五、NAT的优缺点"></a>五、NAT的优缺点</h1><ol><li>优点：<ol><li>能够在最大限度上节约公有IP地址</li><li>能够处理地址交叉的问题</li><li>部署灵活</li><li>通过转换，很好的隐藏了内部私有地址，保护内网安全</li></ol></li><li>缺点：<ol><li>若内部私有地址过多，同时通过1个公有地址访问外网，内部网络容易出现延迟增大的问题</li><li>配置较为复杂</li><li>某些服务不支持</li></ol></li></ol><h1 id="六、实验配置"><a href="#六、实验配置" class="headerlink" title="六、实验配置"></a>六、实验配置</h1><p><img src="/../../images/HCIA/NAT/NAT.png" alt="NAT.png"></p><h2 id="静态转换"><a href="#静态转换" class="headerlink" title="静态转换"></a>静态转换</h2><p><strong>R1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis <span class="token function">ip</span> int br······Interface                         IP Address/Mask      Physical   Protocol  GigabitEthernet0/0/0              <span class="token number">192.168</span>.1.1/24       up         up        GigabitEthernet0/0/1              <span class="token number">10.1</span>.1.1/24          up         up······<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>nat static global <span class="token number">10.1</span>.1.10 inside <span class="token number">192.168</span>.1.10<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>nat static global <span class="token number">10.1</span>.1.20 inside <span class="token number">192.168</span>.1.20<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>nat static global <span class="token number">10.1</span>.1.30 inside <span class="token number">192.168</span>.1.30<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>nat static <span class="token builtin class-name">enable</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis nat static   Static Nat Information:  Interface  <span class="token builtin class-name">:</span> GigabitEthernet0/0/1    Global IP/Port     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.10/----     Inside IP/Port     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.10/----    Protocol <span class="token builtin class-name">:</span> ----         VPN instance-name  <span class="token builtin class-name">:</span> ----                                Acl number         <span class="token builtin class-name">:</span> ----    Netmask  <span class="token builtin class-name">:</span> <span class="token number">255.255</span>.255.255     Description <span class="token builtin class-name">:</span> ----    Global IP/Port     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.20/----     Inside IP/Port     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.20/----    Protocol <span class="token builtin class-name">:</span> ----         VPN instance-name  <span class="token builtin class-name">:</span> ----                                Acl number         <span class="token builtin class-name">:</span> ----    Netmask  <span class="token builtin class-name">:</span> <span class="token number">255.255</span>.255.255     Description <span class="token builtin class-name">:</span> ----    Global IP/Port     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.30/----     Inside IP/Port     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.30/----    Protocol <span class="token builtin class-name">:</span> ----         VPN instance-name  <span class="token builtin class-name">:</span> ----                                Acl number         <span class="token builtin class-name">:</span> ----    Netmask  <span class="token builtin class-name">:</span> <span class="token number">255.255</span>.255.255     Description <span class="token builtin class-name">:</span> ----  Total <span class="token builtin class-name">:</span>    <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">10.1</span>.1.2Ping <span class="token number">10.1</span>.1.2: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">79</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">46</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">47</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">46</span> ms--- <span class="token number">10.1</span>.1.2 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">32</span>/50/79 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动态转换"><a href="#动态转换" class="headerlink" title="动态转换"></a>动态转换</h2><p><strong>R1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>nat address-group <span class="token number">1</span>    <span class="token number">10.1</span>.1.10    <span class="token number">10.1</span>.1.100<span class="token comment">#   Start address   End address</span><span class="token comment">#创建地址池</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>acl <span class="token number">2000</span><span class="token comment">#通过 ACL 匹配需要被转换的网段</span><span class="token punctuation">[</span>AR1-acl-basic-2000<span class="token punctuation">]</span>rule permit <span class="token builtin class-name">source</span> <span class="token number">192.168</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR1-acl-basic-2000<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> any<span class="token comment">#只转换 192.168.1.0/24 网段的地址，不转换其他的地址。</span><span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>nat outbound <span class="token number">2000</span> address-group <span class="token number">1</span> <span class="token comment">#no-pat</span><span class="token comment">#no-pat不转换端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">10.1</span>.1.2Ping <span class="token number">10.1</span>.1.2: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">63</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">63</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">47</span> ms--- <span class="token number">10.1</span>.1.2 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">31</span>/47/63 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#查看地址池</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis nat address-group <span class="token number">1</span> NAT Address-Group Information: -------------------------------------- Index   Start-address      End-address -------------------------------------- <span class="token number">1</span>           <span class="token number">10.1</span>.1.10       <span class="token number">10.1</span>.1.100 --------------------------------------  Total <span class="token builtin class-name">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis nat session allNAT Session Table Information:     Protocol          <span class="token builtin class-name">:</span> ICMP<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     SrcAddr   Vpn     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.20                                        DestAddr  Vpn     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.2                                            Type Code IcmpId  <span class="token builtin class-name">:</span> <span class="token number">0</span>   <span class="token number">8</span>   <span class="token number">52680</span>     NAT-Info       New SrcAddr     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.21             New DestAddr    <span class="token builtin class-name">:</span> ----       New IcmpId      <span class="token builtin class-name">:</span> <span class="token number">10247</span>     Protocol          <span class="token builtin class-name">:</span> ICMP<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     SrcAddr   Vpn     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.10                                        DestAddr  Vpn     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.2                                            Type Code IcmpId  <span class="token builtin class-name">:</span> <span class="token number">0</span>   <span class="token number">8</span>   <span class="token number">52673</span>     NAT-Info       New SrcAddr     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.11             New DestAddr    <span class="token builtin class-name">:</span> ----       New IcmpId      <span class="token builtin class-name">:</span> <span class="token number">10245</span>     Protocol          <span class="token builtin class-name">:</span> ICMP<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     SrcAddr   Vpn     <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.1.30                                        DestAddr  Vpn     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.2                                            Type Code IcmpId  <span class="token builtin class-name">:</span> <span class="token number">0</span>   <span class="token number">8</span>   <span class="token number">52685</span>     NAT-Info       New SrcAddr     <span class="token builtin class-name">:</span> <span class="token number">10.1</span>.1.31             New DestAddr    <span class="token builtin class-name">:</span> ----       New IcmpId      <span class="token builtin class-name">:</span> <span class="token number">10249</span>······  Total <span class="token builtin class-name">:</span> <span class="token number">15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Easy-IP"><a href="#Easy-IP" class="headerlink" title="Easy IP"></a>Easy IP</h2><p><strong>R1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#Easy IP配置与动态转换的配置方式几乎一样</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>acl <span class="token number">2000</span><span class="token comment">#通过 ACL 匹配感兴趣流量</span><span class="token punctuation">[</span>AR1-acl-basic-2000<span class="token punctuation">]</span>rule permit <span class="token builtin class-name">source</span> <span class="token number">192.168</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>AR1-acl-basic-2000<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> any<span class="token comment">#不需要创建地址池</span><span class="token punctuation">[</span>AR1-GigabitEthernet0/0/0<span class="token punctuation">]</span>nat outbound <span class="token number">2000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">10.1</span>.1.2Ping <span class="token number">10.1</span>.1.2: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">47</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">47</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">10.1</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">254</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">47</span> ms--- <span class="token number">10.1</span>.1.2 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">31</span>/40/47 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> NAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 13 -- ACL</title>
      <link href="/2023/09/04/HCIA/HCIA-13-ACL/"/>
      <url>/2023/09/04/HCIA/HCIA-13-ACL/</url>
      
        <content type="html"><![CDATA[<h1 id="一、ACL的基本概念"><a href="#一、ACL的基本概念" class="headerlink" title="一、ACL的基本概念"></a>一、ACL的基本概念</h1><ol><li>ACL是工作在路由器接口级的指令，在接口上对所有入站&#x2F;出站数据包进行过滤，筛选哪些包可以转发，哪些包需要被过滤。</li><li>ACL同时关注第三层（IP头部）与第四层（TCP&#x2F;UDP头部）</li><li>根据管理员预先定义好的规则，在接口上过滤数据。</li></ol><h1 id="二、ACL的主要功能"><a href="#二、ACL的主要功能" class="headerlink" title="二、ACL的主要功能"></a>二、ACL的主要功能</h1><ol><li>ACL提供了防火墙最基础的安全手段。</li><li>IPSec VPN在决定数据是否需要使用VPN传输时，需要ACL为其匹配感兴趣流量。</li><li>在配置QoS时，同样需要调用ACL，使其达到控制流量的作用。</li><li>在应用分布控制列表时，也需要使用ACL去定义流量。</li><li>在配置防火墙实现单向通讯时，也需要使用ACL去匹配流量。</li></ol><h1 id="三、ACL的流量"><a href="#三、ACL的流量" class="headerlink" title="三、ACL的流量"></a>三、ACL的流量</h1><ol><li>更具数据流的访问方向，在ACL中，存在【入】流量与【出】流量。</li><li>ACL的核心工作原理 — 包过滤</li><li>ACL关心第三层头部中的源IP地址与目标IP地址，还有第四层头部中的源端口号码与目标端口号码。</li><li>ACL根据上述的4元素进行精准过滤。</li><li>华为的网络设备在配置ACL的时候，默认隐含【允许】；Cisco的网络设备默认隐含【拒绝】。</li></ol><h1 id="四、ACL的入方向与出方向"><a href="#四、ACL的入方向与出方向" class="headerlink" title="四、ACL的入方向与出方向"></a>四、ACL的入方向与出方向</h1><p><strong>入方向</strong></p><p><img src="/../../../images/HCIA/ACL/%E5%85%A5.png" alt="入方向"></p><p><strong>出方向</strong></p><p><img src="/../../../images/HCIA/ACL/%E5%87%BA.png" alt="出方向"></p><ol><li>ALC既可以应用在【入】方向上，也可以应用在【出】方向上。</li><li>当ACL应用在【入】方向上时，其先检查接口是否配置了ACL，在检查路由表项。</li><li>当ACL应用在【出】方向上时，其先检查路由表项，再检查是否配置了ACL。<br><code>结论：ACL应用在【入】方向更好，ACL可以应用在【出】方向。</code></li></ol><h1 id="五、访问控制列表的配置"><a href="#五、访问控制列表的配置" class="headerlink" title="五、访问控制列表的配置"></a>五、访问控制列表的配置</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建访问控制列表</span><span class="token punctuation">[</span>Huawei<span class="token punctuation">]</span>acl <span class="token number">2001</span><span class="token punctuation">[</span>Huawei-acl-basic-2001<span class="token punctuation">]</span>rule deny <span class="token builtin class-name">source</span> <span class="token number">192.168</span>.10 <span class="token number">0.0</span>.0.255<span class="token comment">#应用ACL</span><span class="token punctuation">[</span>Huawei<span class="token punctuation">]</span>interface GigabitEthernet <span class="token number">0</span>/0/0<span class="token punctuation">[</span>huawei-GigabitEthernet <span class="token number">0</span>/0/0<span class="token punctuation">]</span>traffic-filter inbound acl <span class="token number">2001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="六、ACL的种类"><a href="#六、ACL的种类" class="headerlink" title="六、ACL的种类"></a>六、ACL的种类</h1><ol><li>基本类型ACL【Cisco：标准ACL】<ol><li>基本类型的ACL使用的表号为：2000-2999</li><li>基本类型的ACL仅仅只能够根据源IP地址进行访问控制过滤，提供最基础的网络防范手段。</li></ol></li><li>高级类型ACL【Cisco：扩展ACL】<ol><li>高级类型的ACL能够同时根据源IP地址、目标IP地址、第四层协议（TCP&#x2F;UDP）、四层协议所使用的服务端口号码，根据这4元素进行精准过滤和访问控制。</li><li>高级类型的的ACL使用的表号为3000 — 3999</li></ol></li><li>适配二层MAC的ACL【Cisco：基于MAC地址的ACL】</li><li>基于时间的ACL【绝对时间、时间周期】</li></ol><p><code>注：ACL最好应用在距离信源最近的设备上,且应用将ACL应用在最近的设备的入方向上</code></p><table style="text-align:center;width:700px"><tr style="background:rgb(238,133,109)">    <td>端口号码</td><td>关键字</td><td>具体阐述</td><td>TCP/UDP</td></tr><tr>    <td>20</td><td>FTP-Data</td><td>（文件传输协议）FTP（数据）</td><td>TCP</td></tr><tr>    <td>21</td><td>FTP</td><td>（文件传输协议）FTP</td><td>TCP</td></tr><tr>    <td>23</td><td>Telnet</td><td>终端连接</td><td>TCP</td></tr><tr>    <td>25</td><td>SMTP</td><td>简单邮件传输协议</td><td>TCP</td></tr><tr>    <td>41</td><td>NameServer</td><td>主机名服务</td><td>UDP</td></tr><tr>    <td>53</td><td>Domain</td><td>域名服务（DNS）</td><td>TCP/UDP</td></tr><tr>    <td>69</td><td>TFTP</td><td>简单文件传输协议（TFTP）</td><td>UDP</td></tr><tr>    <td>80</td><td>www</td><td>万维网</td><td>TCP</td></tr></table><h1 id="七、ACL中的常见的服务"><a href="#七、ACL中的常见的服务" class="headerlink" title="七、ACL中的常见的服务"></a>七、ACL中的常见的服务</h1><ol><li>HTTP【超文本传输协议】：TCP 80</li><li>HTTPS【安全的超文本传输协议】：TCP 443</li><li>FTP【文件传输协议】：TCP 20&#x2F;21</li><li>SMTP【简单邮件传输协议】：TCP 25</li><li>POP3【邮局协议版本3】：TCP 110</li><li>TFTP【简单文件传输协议】：UDP 69</li><li>DNS【域名系统】：TCP&#x2F;UDP 53</li></ol><h1 id="八、ACL中的4个操作符"><a href="#八、ACL中的4个操作符" class="headerlink" title="八、ACL中的4个操作符"></a>八、ACL中的4个操作符</h1><ol><li>eq：等于</li><li>gt：大于</li><li>Lt：小于</li><li>neq：不等于</li></ol><h1 id="九、实验配置"><a href="#九、实验配置" class="headerlink" title="九、实验配置"></a>九、实验配置</h1>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> ACL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 12 -- OSPF</title>
      <link href="/2023/09/03/HCIA/HCIA-12-OSPF/"/>
      <url>/2023/09/03/HCIA/HCIA-12-OSPF/</url>
      
        <content type="html"><![CDATA[<h1 id="一、动态路由协议按使用范围进行分类"><a href="#一、动态路由协议按使用范围进行分类" class="headerlink" title="一、动态路由协议按使用范围进行分类"></a>一、动态路由协议按使用范围进行分类</h1><ol><li>内部网关路由协议【IGP】：RIPv1、RIPv2、OSPF、IGRP、EIGRP、IS-IS</li><li>外部网关路由协议【EGP】：BGPv4</li></ol><p><code>注：内部网关协议——工作在同一个AS内部的协议</code></p><h1 id="二、自治系统【AS】"><a href="#二、自治系统【AS】" class="headerlink" title="二、自治系统【AS】"></a>二、自治系统【AS】</h1><ol><li>若一些路由器工作在同一个物理环境内，彼此之间都可以相互通讯，使用相同的路由选择协议，遵从相同的选路规则和依据，执行相同的路由策略，那么我们就称这些路由器工作在同一个自治系统【AS】内部。</li><li>若一种路由协议完全工作在同一个 AS 内部，那么该协议就属于内部网关路由协议</li></ol><h1 id="三、OSPF的基础概念"><a href="#三、OSPF的基础概念" class="headerlink" title="三、OSPF的基础概念"></a>三、OSPF的基础概念</h1><ol><li>OSPF没有路由器个数的限制，被称之为无限广大的路由协议。</li><li>OSPF为了防止单点故障引发的问题影响整个网络，因此其引入了区域【Area】的概念。</li><li>OSPF规定，每个区域中最多可以包含255台路由器，但是OSPF没有区域个数的限制。</li><li>在OSPF中，区域0被称之为骨干区域，其他区域被称之为非骨干区域。</li><li>非骨干区域必须能够通过一个ABR【Area Border Router｜区域边界路由器】与骨干区域直接相连，若没有ABR负责联通骨干区域与非骨干区域，则该非骨干区域无法与骨干区域通讯。</li><li>OSPF可以没有非骨干区域，所有路由器均工作在同一个区域0中（OSPF的单区域网络）</li><li>若一台路由器的所有接口均工作在同一个区域中，则该路由器被称之为内部路由器；若该区域为区域0，则该路由器还可以被称为骨干路由器。</li><li>若一台路由器的不同接口属于不同的区域，则该路由器被称之为区域边界路由器【ABR】，ABR的作用是用来在多个区域之间相互传递彼此的汇总路由信息。</li><li>OSPF区域的划分是在接口上的</li></ol><h1 id="四、Router-ID【路由器ID】"><a href="#四、Router-ID【路由器ID】" class="headerlink" title="四、Router-ID【路由器ID】"></a>四、Router-ID【路由器ID】</h1><ol><li>每台路由器都会拥有一个独立且唯一的RID</li><li>路由器选举RID的规则：<ol><li>若路由器上配置了Loopback接口，则Loopback接口的地址就是该路由器的RID。若存在多个Loopback接口，则地址最大的成为RID。</li><li>若路由器上没有配置Loopback接口，则该路由器所有物理接口上，IP地址最大的将成为RID</li><li>Loopbakc【本地回环接口】是一个虚拟接口，一般用途有2:<ol><li>可以用来给路由器命名，在为路由器命名时，一般配置为32位的子网掩码。</li><li>用来模拟一个网段，或一个具体的主机，用来测试网络的联通性。</li></ol></li></ol></li></ol><h1 id="五、OSPF的3张表"><a href="#五、OSPF的3张表" class="headerlink" title="五、OSPF的3张表"></a>五、OSPF的3张表</h1><ol><li>邻接关系表：保存的时自身直连邻居的路由器ID</li><li>链路状态数据库表【LSDB｜Link State DataBase】：保存的是全网最完整的拓扑结构信息。</li><li>路由表：保存的是到达每个网络节点的最佳路径</li></ol><h1 id="六、OSPF如何建立邻接关系"><a href="#六、OSPF如何建立邻接关系" class="headerlink" title="六、OSPF如何建立邻接关系"></a>六、OSPF如何建立邻接关系</h1><ol><li>Down</li><li>Init</li><li>2-way</li><li>Exstart</li><li>Exchange</li><li>Loading</li><li>Full</li></ol><h2 id="5种报文"><a href="#5种报文" class="headerlink" title="5种报文"></a>5种报文</h2><ol><li>Hello报文</li><li>DBD【DataBase｜数据库描述报文】</li><li>LSR【Link State Request｜链路状态请求报文】</li><li>LSU【Link State Update｜链路状态更新报文】</li><li>LSAck【Link State ACK｜链路状态确认报文】</li></ol><h1 id="七、OSPF建立邻接关系时需要满足的条件"><a href="#七、OSPF建立邻接关系时需要满足的条件" class="headerlink" title="七、OSPF建立邻接关系时需要满足的条件"></a>七、OSPF建立邻接关系时需要满足的条件</h1><ol><li>两台路由器的Area-ID要一致，相同区域可建立关系，不同区域不能建立关系。</li><li>OSPF可以支持配置密钥验证，若配置，则两端均需要配置，或不配置</li><li>两台建立OSPF邻接关系的路由器的Hello时间与死亡时间必须一致【默认值：Hello - 10s；Dead - 40s；】</li></ol><h1 id="八、OSPF中的DR与BDR"><a href="#八、OSPF中的DR与BDR" class="headerlink" title="八、OSPF中的DR与BDR"></a>八、OSPF中的DR与BDR</h1><ol><li>在一个广播型网络中，若所有路由器彼此之间都需要相互通讯，则各个路由器之间都需要建立邻接关系，建立的关系数量过于庞大，此方法不可取。</li><li>OSPF在整个网络中通过选择DR【指定路由器】与 BDR【备份制定路由器】的方式来缓解全互联的问题。</li><li>OSPF选择DR与BDR，先看优先级，优先级最高的成为DR，优先级第二高的成为BDR。</li><li>OSPF优先级的取值范围位：0 — 255，默认值为 1</li><li>若所有OSPF路由器的优先级值相同，则根据RID选择，RID最大的成为DR，RID次大的成为BDR。</li><li>优先级为0，表示不参与选举；优先级为255，表示直接胜出。</li><li>其余的路由器均称为DROthers【其他路由器】，DROthers只与DR&#x2F;BDR建立关系，DROthers之间处在2-way状态</li></ol><h1 id="九、OSPF的更新"><a href="#九、OSPF的更新" class="headerlink" title="九、OSPF的更新"></a>九、OSPF的更新</h1><ol><li>OSPF使用与RIPv2一样的组播方式进行更新</li><li>OSPF占用2个组播地址：<ol><li>DR&#x2F;BDR：224.0.0.6</li><li>DROthers：224.0.0.5</li></ol></li></ol><h1 id="十、OSPF的选路依据"><a href="#十、OSPF的选路依据" class="headerlink" title="十、OSPF的选路依据"></a>十、OSPF的选路依据</h1><ol><li>OSPF根据带宽选路<ul><li>Cost &#x3D; 10^8^&#x2F;BW</li></ul></li><li>计算时，使用10^8^除以换算成bit的带宽。</li><li>OSPF支持等价负载均衡，不支持非等价负载均衡。</li></ol><h1 id="十一、OSPF的优点"><a href="#十一、OSPF的优点" class="headerlink" title="十一、OSPF的优点"></a>十一、OSPF的优点</h1><ol><li>OSPF可适用于大型网络环境</li><li>OSPF属于触发更新，且有更新时只发送更新，没有更新时，10s发送一个Hello包</li><li>OSPF收敛速度快</li><li>OSPF支持区域的划分</li><li>OSPF属于无类路由，传递路由更新时会携带子网掩码</li><li>OSPF使用组播更新</li><li>OSPF确保选择的路径无环</li></ol><h1 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h1><p><img src="/../../images/HCIA/OSPF/OSPF.png" alt="OSPF"></p><p><strong>R1</strong></p><pre class="line-numbers language-none"><code class="language-none">[R1]ospf 1[R1-ospf-1]area 0[R1-ospf-1-area-0.0.0.0]network 192.168.1.0 0.0.0.255[R1-ospf-1-area-0.0.0.0]network 10.1.1.0 0.0.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>R2</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R2<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>R2-ospf-1<span class="token punctuation">]</span>area <span class="token number">0</span><span class="token punctuation">[</span>R2-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">10.1</span>.1.0 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>R2-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">20.1</span>.1.1 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>R3</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R3<span class="token punctuation">]</span>ospf <span class="token number">1</span><span class="token punctuation">[</span>R3-ospf-1<span class="token punctuation">]</span>area <span class="token number">0</span><span class="token punctuation">[</span>R3-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">20.1</span>.1.2 <span class="token number">0.0</span>.0.255<span class="token punctuation">[</span>R3-ospf-1-area-0.0.0.0<span class="token punctuation">]</span>network <span class="token number">172.16</span>.1.10 <span class="token number">0.0</span>.0.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试连通性</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">172.16</span>.1.10Ping <span class="token number">172.16</span>.1.10: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">15</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">15</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">16</span> ms--- <span class="token number">172.16</span>.1.10 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">15</span>/21/32 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> OSPF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 11 -- RIP</title>
      <link href="/2023/09/02/HCIA/HCIA-11-RIP/"/>
      <url>/2023/09/02/HCIA/HCIA-11-RIP/</url>
      
        <content type="html"><![CDATA[<h1 id="一、动态路由的概念"><a href="#一、动态路由的概念" class="headerlink" title="一、动态路由的概念"></a>一、动态路由的概念</h1><ol><li>网络中的路由器彼此之间相互通信，传递各自的路由信息，利用收到的路由信息来更新和维护自己路由表的过程，称之为动态路由。</li><li>动态路由是基于某种动态路由协议实现的<ol><li>单播网络环境中的6大动态路由协议：</li></ol><ul><li>RIP、OSPF、IGRP、EIGRP、IS-IS、BGPv4</li></ul><ol start="2"><li>组播网络环境中的6大动态路由协议：</li></ol><ul><li>PIM、IGMP、CGMP、MOSPF、DVMRP、CBT</li></ul></li><li>特点<ul><li>优点：自主性强，无需管理员手动干预，错误率低</li><li>缺点：智能性过高导致可控性较低，学习路由条目时要消耗处理资源与带宽资源</li></ul></li></ol><h1 id="二、动态路由协议"><a href="#二、动态路由协议" class="headerlink" title="二、动态路由协议"></a>二、动态路由协议</h1><ol><li>向其它路由器传递路由信息</li><li>接收其它路由器的路由信息</li><li>根据收到的路由信息计算出到每个目的网络的最优路径，并由此生成路由表</li><li>根据网络拓扑变化及时调整路由表，同时想其他路由器宣告拓扑改变的信息</li></ol><h1 id="三、动态路由协议的分类"><a href="#三、动态路由协议的分类" class="headerlink" title="三、动态路由协议的分类"></a>三、动态路由协议的分类</h1><ol><li>按照使用的范围进行分类：<ul><li>内部网关路由协议【IGP】：RIP、OSPF、IGRP、EIGRP、IS-IS</li><li>外部网关路由协议【EGP】：BGPv4</li></ul></li><li>按照算法进行分类：<ul><li>距离矢量路由协议：<ul><li>路由器每经过特定时间周期向邻居发送自己的路由表</li><li>有距离(跳数)，有方向性(下一跳)；至于下一跳路由器是否能到达目标网络，本地路由器并不知晓【RIP】</li></ul></li><li>链路状态路由协议：<ul><li>每台路由器都自主学习整张网络拓扑结构环境，拥有完整的路由表项；之后再以自身根节点，计算出到大其它网络节点的最佳路径，由此生成路由表项【OSPF】</li></ul></li><li>混合型路由协议：<ul><li>同时具有距离矢量协议的特点，又具有链路状态协议的特点【IGRP、EIGRP】</li></ul></li></ul></li></ol><h1 id="四、RIP【路由信息协议】"><a href="#四、RIP【路由信息协议】" class="headerlink" title="四、RIP【路由信息协议】"></a>四、RIP【路由信息协议】</h1><h2 id="RIP的基本概念"><a href="#RIP的基本概念" class="headerlink" title="RIP的基本概念"></a>RIP的基本概念</h2><ol><li>TCP&#x2F;ip参考模型下被开发出来的第一款动态路由协议</li><li>RIP属于标准的距离矢量动态路由协议</li><li>RIP【Routing Information Protocol】</li></ol><h2 id="RIP的工作原理"><a href="#RIP的工作原理" class="headerlink" title="RIP的工作原理"></a>RIP的工作原理</h2><p><img src="/../../images/HCIA/RIP/RIP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="工作原理"></p><ol><li>运行RIP的路由器平均每隔30s向其直连的邻居路由器发送整张路由表【若所有RIP路由器在同一时间同时发送路由更新的话，将会造成更新碰撞问题，因此在RIP中引入了一个小的随机抖动计时器（15%），因此每台RIP路由器的更新时间都是不同的（25s-35s）】</li><li>RIP以【跳数】作为其唯一的选路依据(哪近走哪)</li><li>RIP最多支持15跳（16个路由器），第16跳被标记为不可到达</li><li>当网络中的所有路由器的路由表项完全一致后，该网络称之为达到了收敛状态，收敛的网络才能正常的转发数据</li></ol><h2 id="RIP中的3个计时器"><a href="#RIP中的3个计时器" class="headerlink" title="RIP中的3个计时器"></a>RIP中的3个计时器</h2><ol><li>周期更新计时器：30s</li><li>路由老化计时器：180s（若在30s内没有从邻居路由器那里收到整张路由表的更新，则本地路由器将从对端那里学到的路由条目置为16跳，在等待150s）</li><li>垃圾收集计时器：120s（在180s的路由老化计时器到时后，本地路由器在等待120s，若120s后依旧没有收到对端的路由表更新，则彻底删除之前学到的路由条目）</li></ol><p><code>注：更新计时器与老化计时器是同时开启的</code></p><h1 id="五、RIP的路由环路"><a href="#五、RIP的路由环路" class="headerlink" title="五、RIP的路由环路"></a>五、RIP的路由环路</h1><ul><li>环路产生的原因：路由器从一个接口接收到的路由更新，在发送更新时，又将该路由回传回去，从而容易引起环路的发生。</li><li>解决方案：<ol><li>水平分割：<ul><li>保证路由器从一个接口接收到的路由信息，在更新时就不再回传回去，从而保障路由不存在环路问题。</li></ul></li><li>触发更新：<ul><li>只能配置在串行链路上（Serial口）</li></ul></li><li>路由毒化：</li><li>毒性逆转：</li></ol></li></ul><h1 id="六、有类路由与无类路由"><a href="#六、有类路由与无类路由" class="headerlink" title="六、有类路由与无类路由"></a>六、有类路由与无类路由</h1><ol><li>有类路由：在传递路由更新时，不携带子网掩码</li><li>无类路由：在传递路由更新时，携带子网掩码</li></ol><h1 id="七、RIP的版本"><a href="#七、RIP的版本" class="headerlink" title="七、RIP的版本"></a>七、RIP的版本</h1><ol><li>RIPv1：有类路由，不携带子网掩码；广播更新，广播地址：<code>255.255.255.255</code></li><li>RIPv2：无类路由，携带子网掩码；组播更新，组播地址：<code>224.0.0.9</code></li><li>RIPng：IPv6</li></ol><h1 id="八、实验配置"><a href="#八、实验配置" class="headerlink" title="八、实验配置"></a>八、实验配置</h1><p><img src="/../../images/HCIA/RIP/RIP.png" alt="RIP"></p><p><strong>R1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R1<span class="token punctuation">]</span>rip<span class="token punctuation">[</span>R1-rip-1<span class="token punctuation">]</span>version <span class="token number">2</span><span class="token comment">#默认使用RIPv1</span><span class="token comment">#更改为RIPv2</span><span class="token punctuation">[</span>R1-rip-1<span class="token punctuation">]</span>network <span class="token number">192.168</span>.1.0<span class="token punctuation">[</span>R1-rip-1<span class="token punctuation">]</span>network <span class="token number">10.1</span>.1.0Error: The network address is invalid, and the specified address must be major-net address without any subnets.<span class="token comment">#华为的路由器不允许直接通告子网</span><span class="token comment">#10.1.1.0是A类地址10.0.0.0的子网</span><span class="token comment">#10.0.0.0是主网</span><span class="token punctuation">[</span>R1-rip-1<span class="token punctuation">]</span>network <span class="token number">10.0</span>.0.0<span class="token punctuation">[</span>R1-rip-1<span class="token punctuation">]</span>undo summary  <span class="token comment">#不做汇总</span><span class="token comment">#不将子网汇总成主网</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R1<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       ······       <span class="token number">20.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet<span class="token number">0</span>/0/1       ······     <span class="token number">172.16</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">2</span>           D   <span class="token number">10.1</span>.1.2        GigabitEthernet<span class="token number">0</span>/0/1       ······<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>R2</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R2<span class="token punctuation">]</span>rip<span class="token punctuation">[</span>R2-rip-1<span class="token punctuation">]</span>version <span class="token number">2</span><span class="token punctuation">[</span>R2-rip-1<span class="token punctuation">]</span>network <span class="token number">10.0</span>.0.0<span class="token punctuation">[</span>R2-rip-1<span class="token punctuation">]</span>network <span class="token number">20.0</span>.0.0<span class="token punctuation">[</span>R2-rip-1<span class="token punctuation">]</span>undo summary <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R2<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-tableRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       ······     <span class="token number">172.16</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">20.1</span>.1.2        GigabitEthernet<span class="token number">0</span>/0/1    <span class="token number">192.168</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">10.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/0       ······<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>R3</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R3<span class="token punctuation">]</span>rip<span class="token punctuation">[</span>R3-rip-1<span class="token punctuation">]</span>version <span class="token number">2</span><span class="token punctuation">[</span>R3-rip-1<span class="token punctuation">]</span>network <span class="token number">20.0</span>.0.0<span class="token punctuation">[</span>R3-rip-1<span class="token punctuation">]</span>network <span class="token number">172.16</span>.0.0<span class="token punctuation">[</span>R3-rip-1<span class="token punctuation">]</span>undo summary <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R3<span class="token punctuation">]</span>dis <span class="token function">ip</span> routing-table Route Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations <span class="token builtin class-name">:</span> <span class="token number">12</span>       Routes <span class="token builtin class-name">:</span> <span class="token number">12</span>       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       <span class="token number">10.1</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">1</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/0       ······<span class="token number">0</span>/0/1    <span class="token number">192.168</span>.1.0/24  RIP     <span class="token number">100</span>  <span class="token number">2</span>           D   <span class="token number">20.1</span>.1.1        GigabitEthernet<span class="token number">0</span>/0/0       ······<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试连通性</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">172.16</span>.1.10Ping <span class="token number">172.16</span>.1.10: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">15</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">31</span> msFrom <span class="token number">172.16</span>.1.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">125</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32</span> ms--- <span class="token number">172.16</span>.1.10 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">15</span>/28/32 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关闭水平分割"><a href="#关闭水平分割" class="headerlink" title="关闭水平分割"></a>关闭水平分割</h2><ul><li>水平分割功能开启：<ul><li>R1：20.1.1.0&#x2F;24  172.16.1.0&#x2F;24</li><li>R3：10.1.1.0&#x2F;24  192.168.1.0&#x2F;24</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R2-GigabitEthernet0/0/0<span class="token punctuation">]</span>undo rip split-horizon<span class="token punctuation">[</span>R2-GigabitEthernet0/0/0<span class="token punctuation">]</span>int g0/0/1<span class="token punctuation">[</span>R2-GigabitEthernet0/0/1<span class="token punctuation">]</span>undo rip split-horizon<span class="token comment">#开启水平分割功能后只会传递没有的路由更新</span><span class="token comment">#关闭水平分割功能后将会传递所有的路由更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> RIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 10 -- 静态路由</title>
      <link href="/2023/09/02/HCIA/HCIA-10-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/"/>
      <url>/2023/09/02/HCIA/HCIA-10-%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、路由的概念"><a href="#一、路由的概念" class="headerlink" title="一、路由的概念"></a>一、路由的概念</h1><ul><li>跨越从源主机到目标主剧的一个互联网络来转发数据包的过程</li><li>在转发过程中，负责路由数据包的机器，称之为路由器</li></ul><h1 id="二、路由器的工作原理"><a href="#二、路由器的工作原理" class="headerlink" title="二、路由器的工作原理"></a>二、路由器的工作原理</h1><ol><li>路由器与交换机相比，在转发数据时，唯一的相同点在于，都会查表转发【路由器：路由表；交换机：MAC 地址吧】</li><li>路由器与交换机在转发过程中的区别：<ol><li>交换机会学习源 MAC 地址，通过不断的学习源 MAC 地址来完整自身的 MAC地址表象；路由器不学习源 IP 地址，只关心目标网络。</li><li>交换机在无法找到目标网络时会进行广播转发操作，而路由器若没有找到路由表，则执行丢弃操作，向信源返回不可达信息。</li></ol></li></ol><h2 id="路由表"><a href="#路由表" class="headerlink" title="路由表"></a>路由表</h2><ul><li>在路由器中维护的路由条目，路由器根据路由表做路径选择。</li></ul><h2 id="直连路由"><a href="#直连路由" class="headerlink" title="直连路由"></a>直连路由</h2><ul><li>当在路由器上配置了借口的IP地址，并且接口状态为up的时候，路由表中就出现直连路由表项。</li></ul><h1 id="三、路由表的形成"><a href="#三、路由表的形成" class="headerlink" title="三、路由表的形成"></a>三、路由表的形成</h1><ol><li>路由器不学习源IP地址</li><li>路由器在配置好自身的接口IP地址后，首先会学习自身接口IP地址所属的网段，形成直连路由。</li><li>对于非直连的路由，其默认是不会出现在我的本地路由表中的，若想知道非直连的路由，则需要：<ol><li>静态路由：</li><li>动态路由：RIP、OSPF、IGRP、EIGRP、IS-IS、BGPv4</li></ol></li></ol><blockquote><p>注：在路由过程中，只有网络中的所有路由器的路由表完全一致了，该网络才能够正常转发数据。<br>若网络中的所有路由器的路由表完全一致后，该网络称之为【收敛】了。<br>只有收敛的网络才能够正常的转发数据<br>网络不收敛的状态称之为动荡状态｜抖动状态｜翻动状态</p></blockquote><h1 id="四、静态路由"><a href="#四、静态路由" class="headerlink" title="四、静态路由"></a>四、静态路由</h1><ul><li>静态路由是由管理员手动写在路由表中的，且为单向的。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>Huawei<span class="token operator">></span>system-view<span class="token punctuation">[</span>Huawei<span class="token punctuation">]</span>ip route_static <span class="token number">172.16</span>.1.0 <span class="token number">24</span> <span class="token number">10.1</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>路由表是手工设置</li><li>除非网络管理员干预，否则静态路由不会发生变化</li><li>路由表的形成不需要占用网络资源</li><li>适用环境<ul><li>一般用于网络规模很小、拓扑结构固定的网络中</li></ul></li></ul><h1 id="五、缺省路由"><a href="#五、缺省路由" class="headerlink" title="五、缺省路由"></a>五、缺省路由</h1><ul><li>当路由器在自身的路由表中无法找到目标网络时，令路由器不要丢弃数据包，而是将数据包转发至一个默认的路由器上，这条路由器被称之为 —— 缺省路由</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>Huawei<span class="token operator">></span>system-view<span class="token punctuation">[</span>Huawei<span class="token punctuation">]</span>ip route-static <span class="token number">0.0</span>.0.0 <span class="token number">0</span> <span class="token number">10.1</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><ul><li>在所有路由类型中，默认路由的优先级最低</li><li>适用环境<ul><li>一般应用在只有一个出口的末端网络【Stub Area】</li><li>作为其它路由的补充出现</li></ul></li></ul><h1 id="六、路由器在转发数据包时的封装过程"><a href="#六、路由器在转发数据包时的封装过程" class="headerlink" title="六、路由器在转发数据包时的封装过程"></a>六、路由器在转发数据包时的封装过程</h1><ul><li>路由器在路由数据包时，三层头部中的源IP地址与目标IP地址始终保持不变，而路由器会不断的使用自身接口的MAC地址做二层重封装，将数据包一路路由至目的地。</li><li><code>结论：MAC地址的传输仅具有本地效应</code></li></ul><h1 id="七、单臂路由"><a href="#七、单臂路由" class="headerlink" title="七、单臂路由"></a>七、单臂路由</h1><ul><li>交换机上的VLAN之间如何通信</li></ul><h2 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h2><p><img src="/../../images/HCIA/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1.png" alt="单臂路由"></p><p><strong>SW</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>SW<span class="token punctuation">]</span>vlan ba <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">[</span>SW-GigabitEthernet0/0/1<span class="token punctuation">]</span>port link-type access<span class="token punctuation">[</span>SW-GigabitEthernet0/0/1<span class="token punctuation">]</span>port default vlan <span class="token number">2</span><span class="token punctuation">[</span>SW-GigabitEthernet0/0/3<span class="token punctuation">]</span>port link-type access<span class="token punctuation">[</span>SW-GigabitEthernet0/0/3<span class="token punctuation">]</span>port default vlan <span class="token number">3</span><span class="token punctuation">[</span>SW-GigabitEthernet0/0/2<span class="token punctuation">]</span>port link-type trunk<span class="token comment">#放行vlan 2 3 标签</span><span class="token punctuation">[</span>SW-GigabitEthernet0/0/2<span class="token punctuation">]</span>port trunk allow-pass vlan <span class="token number">2</span> to <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>R1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>R1<span class="token punctuation">]</span>int g0/0/0.1<span class="token comment">#dot1q termination vid</span><span class="token comment">#首先删除VLAN标签。接口在收到VLAN报文后，剥掉报文中携带的Tag后进行三层转发。</span><span class="token comment">#然后添加VLAN标签。接口在发送报文时，将相应的VLAN信息添加到报文中再发送。</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.1<span class="token punctuation">]</span>dot1q termination vid <span class="token number">2</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.1<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.1 <span class="token number">24</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.1<span class="token punctuation">]</span>arp broadcast <span class="token builtin class-name">enable</span>  <span class="token comment">#开启ARP广播功能</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.2<span class="token punctuation">]</span>dot1q termination vid <span class="token number">3</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.2<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.2.1 <span class="token number">24</span><span class="token punctuation">[</span>R1-GigabitEthernet0/0/0.2<span class="token punctuation">]</span>arp broadcast <span class="token builtin class-name">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试连通性</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PC<span class="token operator">></span>ping <span class="token number">192.168</span>.2.10Ping <span class="token number">192.168</span>.2.10: <span class="token number">32</span> data bytes, Press Ctrl_C to <span class="token builtin class-name">break</span>From <span class="token number">192.168</span>.2.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">127</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">63</span> msFrom <span class="token number">192.168</span>.2.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">127</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">78</span> msFrom <span class="token number">192.168</span>.2.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">127</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">94</span> msFrom <span class="token number">192.168</span>.2.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">127</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">78</span> msFrom <span class="token number">192.168</span>.2.10: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">32</span> <span class="token assign-left variable">seq</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">127</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">78</span> ms--- <span class="token number">192.168</span>.2.10 <span class="token function">ping</span> statistics ---  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted  <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received  <span class="token number">0.00</span>% packet loss  round-trip min/avg/max <span class="token operator">=</span> <span class="token number">63</span>/78/94 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> 静态路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 9 -- 网络层</title>
      <link href="/2023/09/01/HCIA/HCIA-9-%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
      <url>/2023/09/01/HCIA/HCIA-9-%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h2 id="一、网络层的主要功能"><a href="#一、网络层的主要功能" class="headerlink" title="一、网络层的主要功能"></a>一、网络层的主要功能</h2><ol><li>提供了通讯工程中必须要使用的另一个地址：逻辑 IP 地址【IPv4、IPv6】</li><li>连接不同的媒介类型【内网 — 外网(Intra — Inter)】</li><li>根据运行的不同路由协议，选择不同的最佳路径</li><li>在选择好的最佳路径上负责路由数据包</li></ol><h3 id="IP包头格式"><a href="#IP包头格式" class="headerlink" title="IP包头格式"></a>IP包头格式</h3><table style="text-align:center;width:700px"><tr style="background:rgb(238,133,109)">    <td>版本 (4)</td><td>首部长度 (4)</td><td>优先级与服务类型 (8)</td><td colspan="2">总长度 (16)</td><td rowspan="5" style="background:#fff">20 字节</td></tr><tr style="background:rgb(238,234,217)">    <td colspan="3">标识符 (16)</td><td>标志 (3)</td><td>段偏移量 (13)</td></tr><tr style="background:rgb(238,133,109,0.6)">    <td colspan="2">TTL (8)</td><td>协议号 (8)</td><td colspan="2">首部校验和 (16)</td></tr><tr style="background:rgb(238,234,217)">    <td colspan="5">源IP地址 (16)</td></tr><tr style="background:rgb(238,133,109,0.6)">    <td colspan="5">目标IP地址 (16)</td></tr><tr style="background:rgb(238,234,217)">    <td colspan="5">可选项</td><td rowspan="2" style="background:#fff"></td></tr><tr style="background:rgb(238,133,109,0.6)">    <td colspan="5">数据</td></tr></table><h2 id="QoS【服务质量】"><a href="#QoS【服务质量】" class="headerlink" title="QoS【服务质量】"></a>QoS【服务质量】</h2><p><code>分类、标记、流量调节、拥塞管理、拥塞避免</code></p><ol start="7"><li>网络协议保留使用</li><li>网络协议保留使用</li><li>音频流量</li><li>振铃流量</li><li>视频流量</li><li>高优先级</li><li>中优先级</li><li>BE【尽力而为】</li></ol><h2 id="二、网络层的IPv4头部"><a href="#二、网络层的IPv4头部" class="headerlink" title="二、网络层的IPv4头部"></a>二、网络层的IPv4头部</h2><p>网络层的 <code>IP</code> 头部默认为 <code>20Byte</code></p><ol><li>版本字段：用来表明当前IP协议所使用的版本号【IPv4】。</li><li>首部长度字段：用来表明当前IP头部一共多大【默认20Byte】。</li><li>服务类型与优先级：用来配合三层实现QoS使用。</li><li>总长度：包含各层头部封装与用户发送的原始数据的总大小。</li><li>标识符：</li><li>标志：在数据被分片之后，传送到对端，对端重组时保证不会乱序。</li><li>段偏移量：</li><li>TTL：网络中的每一个数据包默认都携带一TTL值，该值经过一个3层设备就减 1，当减至0时还没有被任何接收方接收，则该数据自动消失被丢弃，保证网络中不存在过多的垃圾文件。</li><li>协议号：三层与四层之间的服务接入点，若协议号为6，则表明上层使用的是TCP，若协议号为17，则表明上层使用的是UDP。</li><li>首部校验和：三层用来在首部进行校验和检测的地方。</li><li>源 IP 地址：32 bit</li><li>目的 IP 地址：32 bit</li></ol><h2 id="三、IP地址的作用"><a href="#三、IP地址的作用" class="headerlink" title="三、IP地址的作用"></a>三、IP地址的作用</h2><ol><li>一个IP地址可以用来标识一个独立的网络节点。</li><li>可以用来标识一个网段【组】。</li></ol><h2 id="四、IP地址的分类"><a href="#四、IP地址的分类" class="headerlink" title="四、IP地址的分类"></a>四、IP地址的分类</h2><ul><li>A：1 — 126 【通讯使用】</li><li>B：128 — 191 【通讯使用】</li><li>C：192 — 223 【通讯使用】</li><li>D：224 — 239 【组播使用】</li><li>E：240 — 254 【科学研究使用】</li></ul><p><code>注：127【本地回环接口地址】：用来实现本机网卡测试。</code><br><code>::1：IPv6 中的本地回环接口地址。</code></p><h2 id="五、私有地址"><a href="#五、私有地址" class="headerlink" title="五、私有地址"></a>五、私有地址</h2><ul><li>A：10.0.0.0&#x2F;8</li><li>B：172.16.0.0 — 172.31.255.255&#x2F;12</li><li>C：192.168.0.0 — 192.168.255.255&#x2F;16</li></ul><p>私有地址是网络从 <code>IPv4</code> 向 <code>IPv6</code> 过度种的过度技术，通过使用私有地址，能够明显的降低公有地址的消耗过度。<br>除了以上 3 段私有地址外，其他地址均为公有地址<br>注：<code>169.254.0.0/16 是微软买断的一个网段</code></p><h2 id="六、子网掩码的作用"><a href="#六、子网掩码的作用" class="headerlink" title="六、子网掩码的作用"></a>六、子网掩码的作用</h2><p>用来区分不同的网段</p><h2 id="七、子网的划分"><a href="#七、子网的划分" class="headerlink" title="七、子网的划分"></a>七、子网的划分</h2><ol><li>主机位不能全为 0，主机位全为 0 则表示的是网段</li><li>主机位不能全为 1，主机为全为 1 则表示的是广播地址</li></ol><h2 id="八、ARP-协议"><a href="#八、ARP-协议" class="headerlink" title="八、ARP 协议"></a>八、ARP 协议</h2><p>地址解析协议：已知对方的 <code>IP地址</code>，解析对方的 <code>MAC地址</code>。<br>客户端在与对端设备通讯时，首先检测自身的 <code>ARP缓存表</code>，若自身的 <code>ARP缓存表</code> 中不存在对端的 <code>IP</code> 与 <code>MAC地址</code> 的映射关系，则信源发送 <code>ARP广播请求</code>。<br>在信源发送的 <code>ARP广播请求</code> 中，包含了其自身的 <code>源IP地址</code> 与 <code>源MAC地址</code>，当对端设备接收到该 <code>ARP广播请求</code> 后，对端设备将会给予单播响应回复，而无需发送广播响应。<br>在信源得知了对端的 <code>MAC地址</code> 后，将对端设备 <code>IP地址</code> 与 <code>MAC地址</code> 做对应关系，保存在自身的 <code>ARP缓存表</code> 中后，方可与对端通讯。</p><h2 id="九、RARP-反向地址解析协议"><a href="#九、RARP-反向地址解析协议" class="headerlink" title="九、RARP 反向地址解析协议"></a>九、RARP 反向地址解析协议</h2><p>已知自身的 MAC地址，广播请求一个 IP地址<br>网络中的负责分配 IP地址 的服务器单薄给予响应，为客户端分配 IP地址</p><p><code>注：RARP就是DHCP的前身协议</code><br>RARP 因为需要让负责分配 <code>IP地址</code> 的服务器预先知道客户端的 <code>MAC地址</code> 后，才能给客户端分配 <code>IP地址</code>。</p><h2 id="十、代理-ARP"><a href="#十、代理-ARP" class="headerlink" title="十、代理 ARP"></a>十、代理 ARP</h2><ol><li>路由器默认情况下不会发送广播报文。</li><li>来自客户端的 <code>ARP广播请求</code> 不会被路由器传至对端。</li><li>路由器会将自身接口的 <code>IP地址</code> 与 <code>MAC地址</code> 以单播的方式响应给信源主机，信源主机的 <code>ARP缓存表</code> 中保存的就是直连路由器的接口 <code>IP地址</code> 与 <code>MAC地址</code> 的对应关系。</li><li>信源主机就会将所有访问目标网络的数据统一发送给自己的直连路由器。</li><li>路由器在两个客户端通讯的过程中，起到代理的作用。</li></ol><h2 id="十一、ICMP-【网际控制消息协议】"><a href="#十一、ICMP-【网际控制消息协议】" class="headerlink" title="十一、ICMP 【网际控制消息协议】"></a>十一、ICMP 【网际控制消息协议】</h2><ul><li>ICMP：用来检测网络的双向连通性。</li><li>ping [-t] [-a] [-l 字节数] IP_Address ｜ Target_names</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> 网络层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 7 -- 聚合链路</title>
      <link href="/2023/08/31/HCIA/HCIA-7-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"/>
      <url>/2023/08/31/HCIA/HCIA-7-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>链路聚合大多部署在核心层，以便提升整体网络的数据吞吐量。</li></ul><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>链路聚合能够提高链路带宽、增强网络可用性、支持负载分担</li></ul><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><ul><li>华为的网络设备共有两种链路聚合模式：<ul><li>手工负载分担模式：所有活动端口均可参与数据的转发，负载分担流量</li><li>LACP【Link Aggregation Control Protocol】模式：支持链路备份<br><img src="/../../images/HCIA/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/%E6%A8%A1%E5%BC%8F.png" alt="模式"></li></ul></li></ul><h2 id="指导原则"><a href="#指导原则" class="headerlink" title="指导原则"></a>指导原则</h2><ol><li>华为网络设备最多允许 <strong>8个端口</strong> 绑定刀一起</li><li>一个 <strong>Eth-Trunk</strong> 内的所有端口必须使用 <strong>相同模式</strong>【手工或LACP】</li><li>一个 <strong>Eth-Trunk</strong> 内的所有端口都必须具有 <strong>相同的速率和双工模式</strong>；若成员端口的速率不同，速率较低的端口可能会拥塞，报文可能会被丢弃</li><li>一个端口不能在 <strong>相同时间</strong> 内属于 <strong>多个通道组</strong></li><li>一个 <strong>Eth-Trunk</strong> 内的所有端口都必须配置到 <strong>相同的接入VLAN或VLAN干道中</strong></li><li>只能删除不包含任何成员端口的 Eth-Trunk 口</li><li>将端口加入进 Eth-Trunk 口时，二层 Eth-Trunk 口的成员端口必须是二层端口，三层 Eth-Trunk 口的成员端口必须时三层端口</li><li>加入 Eth-Trunk 口的端口必须是 <strong>hybrid端口</strong></li><li>一个 Eth-Trunk 口不能充当其它 Eth-Trunk 口的成员端口</li><li>一个 Eth-Trunk 口的成员端口类型必须相同；一个快速以太网端口【FastEthernet】与一个千兆以太网端口【GigabitEthernet】不能加入同一个 Eth-Trunk 内</li><li>端口加入到 Eth-Trunk 后，Eth-Trunk 端口将会<strong>学习</strong> <code>MAC地址</code>，而成员端口不在学习 <code>MAC地址</code></li></ol><p><code>注：二层交换机只能和二层交换机做链路聚合，三层交换机只能和三层交换机做链路聚合。</code></p><h2 id="数据流控制"><a href="#数据流控制" class="headerlink" title="数据流控制"></a>数据流控制</h2><ul><li>数据流在聚合链路上传输，数据顺序必须保持不变。一个数据流可以看做是一组 MAC地址 和 IP地址 相同的帧。</li><li>配置链路聚合后，多条物理链路被绑定成一条聚合链路，一个数据流中的帧通过不同的物理链路传输，从而产生接受数据包乱序的情况。</li><li>为了避免这种情况的发生，Eth-Trunk 采用逐流负载分担的机制</li><li>将数据帧中的地址通过 HASH 算法生成 HASH-KEY 值，根据该数值在 Eth-Trunk 转发表中寻找对应的出接口，不同的 MAC地址 或 IP地址 HASH 得出的 HASH-KEY 值不同，从而出接口也就不同。</li><li>保证了同一数据流的帧在同一条物理链路转发，又实现了流量在聚合组内各物理链路上的负载分担，即逐流的负载分担。</li><li>逐流负载分担能保证包的顺序，但不能保证贷款利用率。</li></ul><h2 id="均分负载"><a href="#均分负载" class="headerlink" title="均分负载"></a>均分负载</h2><ul><li>等价均分负载 — 将流量均匀地分布到多条度量相同的路径上，又叫负载平衡。</li><li>非等价均分负载 — 将数据包分布到度量不同的多条路径上，各条路径上分布的流量与路由代价成反比，代价越低的路径分配的流量越多，代价越高的路径分配的流量越少。</li><li>一些路由选择协议可以支持等价和非等价负载均衡两种方式，如 EIGRP；而一些路由选择协议仅支持等价方式，静态路由没有度量，因此仅支持等价负载均衡。</li></ul><h1 id="实验配置"><a href="#实验配置" class="headerlink" title="实验配置"></a>实验配置</h1><h2 id="二层链路手工模式聚合配置"><a href="#二层链路手工模式聚合配置" class="headerlink" title="二层链路手工模式聚合配置"></a>二层链路手工模式聚合配置</h2><p><img src="/../../images/HCIA/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/%E4%BA%8C%E5%B1%82-%E8%81%9A%E5%90%88%E9%93%BE%E8%B7%AF.png" alt="二层-链路聚合"></p><p><strong>SW1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Eth-Trunk1<span class="token punctuation">]</span>q<span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>int e0/0/1<span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW1-Ethernet0/0/2<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Ethernet0/0/2<span class="token punctuation">]</span>int e0/0/3<span class="token punctuation">[</span>SW1-Ethernet0/0/3<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>dis <span class="token function">ip</span> int br*down: administratively down^down: standby<span class="token punctuation">(</span>l<span class="token punctuation">)</span>: loopback<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: spoofingThe number of interface that is UP <span class="token keyword">in</span> Physical is <span class="token number">2</span>The number of interface that is DOWN <span class="token keyword">in</span> Physical is <span class="token number">1</span>The number of interface that is UP <span class="token keyword">in</span> Protocol is <span class="token number">1</span>The number of interface that is DOWN <span class="token keyword">in</span> Protocol is <span class="token number">2</span>Interface                         IP Address/Mask      Physical   Protocol  MEth0/0/1                         unassigned           down       down      NULL0                             unassigned           up         up<span class="token punctuation">(</span>s<span class="token punctuation">)</span>     Vlanif1                           unassigned           up         down      <span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>dis eth-trunk <span class="token number">1</span>Eth-Trunk1's state information is:WorkingMode: NORMAL         Hash arithmetic: According to SIP-XOR-DIP         Least Active-linknumber: <span class="token number">1</span>  Max Bandwidth-affected-linknumber: <span class="token number">8</span>              Operate status: up          Number Of Up Port In Trunk: <span class="token number">3</span>                     --------------------------------------------------------------------------PortName                      Status      Weight Ethernet0/0/1                 Up          <span class="token number">1</span>      Ethernet0/0/2                 Up          <span class="token number">1</span>      Ethernet0/0/3                 Up          <span class="token number">1</span>   <span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>dis stp br MSTID  Port                        Role  STP State     Protection   <span class="token number">0</span>    Ethernet0/0/4               DESI  FORWARDING      NONE   <span class="token number">0</span>    Eth-Trunk1                  ROOT  FORWARDING      NONE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>SW2</strong><br>sw2配置与sw1相同</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>SW2<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Eth-Trunk1<span class="token punctuation">]</span>int e0/0/1<span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW2-Ethernet0/0/2<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Ethernet0/0/2<span class="token punctuation">]</span>int e0/0/3<span class="token punctuation">[</span>SW2-Ethernet0/0/3<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="LACP"><a href="#LACP" class="headerlink" title="LACP"></a>LACP</h2><p><strong>SW1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Eth-Trunk1<span class="token punctuation">]</span>mode lacp-static  <span class="token comment">#配置模式</span><span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW1-Ethernet0/0/2<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Ethernet0/0/2<span class="token punctuation">]</span>int e0/0/3<span class="token punctuation">[</span>SW1-Ethernet0/0/3<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>lacp priority <span class="token number">100</span>  <span class="token comment">#选举指定lacp优先级</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>int e0/0/1<span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>lacp priority <span class="token number">100</span>  <span class="token comment">#配置优先级</span><span class="token punctuation">[</span>SW1-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW1-Ethernet0/0/2<span class="token punctuation">]</span>lacp priority <span class="token number">100</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW1-Eth-Trunk1<span class="token punctuation">]</span>max active-linknumber <span class="token number">2</span>  <span class="token comment">#指定最大活跃链路为两条</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>dis eth-trunk <span class="token number">1</span>Eth-Trunk1<span class="token string">'s state information is:Local:LAG ID: 1                   WorkingMode: STATIC                               Preempt Delay: Disabled     Hash arithmetic: According to SIP-XOR-DIP         System Priority: 100        System ID: 4c1f-cc82-4664                         Least Active-linknumber: 1  Max Active-linknumber: 2                          Operate status: down        Number Of Up Port In Trunk: 0                     --------------------------------------------------------------------------------ActorPortName          Status   PortType PortPri PortNo PortKey PortState WeightEthernet0/0/1          Unselect 100M     100     2      289     10100010  1     Ethernet0/0/2          Unselect 100M     100     3      289     10100010  1     Ethernet0/0/3          Unselect 100M     32768   4      289     10100010  1     Partner:--------------------------------------------------------------------------------ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortStateEthernet0/0/1          0        0000-0000-0000  0       0      0       10100011Ethernet0/0/2          0        0000-0000-0000  0       0      0       10100011Ethernet0/0/3          0        0000-0000-0000  0       0      0       10100011'</span><span class="token punctuation">[</span>SW1<span class="token punctuation">]</span>dis stp br MSTID  Port                        Role  STP State     Protection   <span class="token number">0</span>    Ethernet0/0/4               DESI  FORWARDING      NONE   <span class="token number">0</span>    Eth-Trunk1                  ROOT  FORWARDING      NONE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>SW2</strong><br>sw2配置与sw1相同</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>SW2<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Eth-Trunk1<span class="token punctuation">]</span>mode lacp-static<span class="token punctuation">[</span>SW2-Eth-Trunk1<span class="token punctuation">]</span>int e0/0/1<span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW2-Ethernet0/0/2<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Ethernet0/0/2<span class="token punctuation">]</span>int e0/0/3<span class="token punctuation">[</span>SW2-Ethernet0/0/3<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2<span class="token punctuation">]</span>lacp priority <span class="token number">100</span><span class="token punctuation">[</span>SW2<span class="token punctuation">]</span>int e0/0/1<span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>lacp priority <span class="token number">100</span><span class="token punctuation">[</span>SW2-Ethernet0/0/1<span class="token punctuation">]</span>int e0/0/2<span class="token punctuation">[</span>SW2-Ethernet0/0/2<span class="token punctuation">]</span>lacp priority <span class="token number">100</span><span class="token punctuation">[</span>SW2<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>SW2-Eth-Trunk1<span class="token punctuation">]</span>max active-linknumber <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三层链路手工模式聚合配置"><a href="#三层链路手工模式聚合配置" class="headerlink" title="三层链路手工模式聚合配置"></a>三层链路手工模式聚合配置</h2><p><img src="/../../images/HCIA/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/%E4%B8%89%E5%B1%82-%E8%81%9A%E5%90%88%E9%93%BE%E8%B7%AF.png" alt="三层-链路聚合"></p><p><strong>AR1</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span> int g0/0/0<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/0<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span>Info: This operation may take a few seconds. Please <span class="token function">wait</span> <span class="token keyword">for</span> a moment<span class="token punctuation">..</span>.Error: The layer-3 interface can not <span class="token function">add</span> into a layer-2 trunk.done.<span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>AR1-Eth-Trunk1<span class="token punctuation">]</span>undo portswitch  <span class="token comment">#关闭二层端口功能</span><span class="token punctuation">[</span>AR1-Eth-Trunk1<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.1 <span class="token number">24</span><span class="token punctuation">[</span>AR1-GigabitEthernet0/0/0<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>AR1-GigabitEthernet0/0/0<span class="token punctuation">]</span>int g0/0/1<span class="token punctuation">[</span>AR1-GigabitEthernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token comment">#测试连通性</span><span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>ping <span class="token number">192.168</span>.1.2  PING <span class="token number">192.168</span>.1.2: <span class="token number">56</span>  data bytes, press CTRL_C to <span class="token builtin class-name">break</span>    Reply from <span class="token number">192.168</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">255</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">90</span> ms    Reply from <span class="token number">192.168</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">255</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">10</span> ms    Reply from <span class="token number">192.168</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">255</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">20</span> ms    Reply from <span class="token number">192.168</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">255</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30</span> ms    Reply from <span class="token number">192.168</span>.1.2: <span class="token assign-left variable">bytes</span><span class="token operator">=</span><span class="token number">56</span> <span class="token assign-left variable">Sequence</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">255</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">10</span> ms  --- <span class="token number">192.168</span>.1.2 <span class="token function">ping</span> statistics ---    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> transmitted    <span class="token number">5</span> packet<span class="token punctuation">(</span>s<span class="token punctuation">)</span> received    <span class="token number">0.00</span>% packet loss    round-trip min/avg/max <span class="token operator">=</span> <span class="token number">10</span>/32/90 ms<span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>AR1-Eth-Trunk1<span class="token punctuation">]</span>mode lacp-static <span class="token punctuation">[</span>AR1<span class="token punctuation">]</span>dis int Eth-Trunk <span class="token number">1</span>Eth-Trunk1 current state <span class="token builtin class-name">:</span> UPLine protocol current state <span class="token builtin class-name">:</span> UP······-----------------------------------------------------PortName                      Status      Weight-----------------------------------------------------GigabitEthernet0/0/0          UP          <span class="token number">1</span>GigabitEthernet0/0/1          UP          <span class="token number">1</span>-----------------------------------------------------The Number of Ports <span class="token keyword">in</span> Trunk <span class="token builtin class-name">:</span> <span class="token number">2</span>The Number of UP Ports <span class="token keyword">in</span> Trunk <span class="token builtin class-name">:</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>AR2</strong><br>AR2配置与AR1相同</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>AR2<span class="token punctuation">]</span>int Eth-Trunk <span class="token number">1</span><span class="token punctuation">[</span>AR2-Eth-Trunk1<span class="token punctuation">]</span>undo portswitch<span class="token punctuation">[</span>AR2-Eth-Trunk1<span class="token punctuation">]</span>ip address <span class="token number">192.168</span>.1.2<span class="token punctuation">[</span>AR2-GigabitEthernet0/0/0<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span class="token punctuation">[</span>AR2-GigabitEthernet0/0/0<span class="token punctuation">]</span>int g0/0/1<span class="token punctuation">[</span>AR2-GigabitEthernet0/0/1<span class="token punctuation">]</span>eth-trunk <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> 聚合链路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCIA -- 6 -- STP</title>
      <link href="/2023/08/30/HCIA/HCIA-6-STP/"/>
      <url>/2023/08/30/HCIA/HCIA-6-STP/</url>
      
        <content type="html"><![CDATA[<h2 id="一、二层广播风暴的产生"><a href="#一、二层广播风暴的产生" class="headerlink" title="一、二层广播风暴的产生"></a>一、二层广播风暴的产生</h2><ol><li>交换机的工作原理中存在缺陷，交换机在无法找到目标网络时会发送广播。</li><li>弱管理员将网络的物理拓扑结构连接成环路的话，则在二层网络中，将会引起广播风暴。</li><li>广播风暴会导致交换机耗尽自身全部资源，致使硬件设备死机或硬件损坏。</li></ol><h2 id="二、STP的工作原理"><a href="#二、STP的工作原理" class="headerlink" title="二、STP的工作原理"></a>二、STP的工作原理</h2><ol><li>STP将一个有环网络中的某一条链路的某一个端口从逻辑上down掉，保证网络无环且正常运行；当其他任意一条主链路发生故障时，之前从逻辑上down掉的端口会自动激活，重新恢复连接，保证通讯的正常运行。</li></ol><h3 id="2-STP的算法"><a href="#2-STP的算法" class="headerlink" title="2. STP的算法"></a>2. STP的算法</h3><p>STP若想将一个有环的网络最终生成为一个无环的拓扑结构，一共需要 3 步：</p><h4 id="2-1-选择根网桥【root】"><a href="#2-1-选择根网桥【root】" class="headerlink" title="2.1 选择根网桥【root】"></a>2.1 选择根网桥【root】</h4><p>每台交换机都有一个独立且唯一的BID【Bridge ID】<br>BID &#x3D; <code>网桥优先级</code> ➕ <code>网桥 MAC 地址</code><br>网桥的优先级取值范围：<code>0 —— 61440</code><br>默认值为：<code>32768</code><br>在选择根网桥时，BID最小的将胜出。<br>因此在进行选举时，各个网桥先比较各自的优先级值，若优先级值完全一样时，再比较各个网桥的 MAC 地址。<br><code>注：在手动配置 STP 的优先级时，改值必须能够被 2 整除，且是 16 的整数倍；管理员能够配置的最小值为4096</code><br>STP配置优先级时的常用数值：<code>4096、8192、24576、32768</code></p><h4 id="2-2-选择根端口【RP】"><a href="#2-2-选择根端口【RP】" class="headerlink" title="2.2 选择根端口【RP】"></a>2.2 选择根端口【RP】</h4><p>根端口时在非根网桥上选举出来的，在非根网桥上选择根端口，共需4步：</p><ol><li>最低的到达根网桥的路径开销</li><li>最低的发送方网桥ID</li><li>最低的端口优先级</li><li>发送方最低的端口ID</li></ol><p><code>注：端口ID【Port ID】</code></p><p>PID &#x3D; <code>端口优先级</code> ➕ <code>端口编号</code><br>端口优先级的取值范围：<code>0 — 240</code><br><code>默认值为：128</code><br>端口编号：E0&#x2F;0&#x2F;1【左起第一个 0 表示板卡号、中间的 0 表示模块号、最右侧的 1 表示槽位号（端口编号）】<br>E0&#x2F;0&#x2F;1 的 PID &#x3D; 128.1</p><h4 id="2-3-选择指定端口【DP】"><a href="#2-3-选择指定端口【DP】" class="headerlink" title="2.3 选择指定端口【DP】"></a>2.3 选择指定端口【DP】</h4><ul><li>在每个网段上，选择1个指定端口</li><li>根网桥上的所有端口均为指定端口</li><li>非根网桥上指定端口选举的过程分为4步：<ol><li>BPDU 中的根网桥 ID</li><li>最低的到达根网桥的路径开销</li><li>发送方的网桥 ID</li><li>若优先级相同，则具有最低 MAC 地址</li></ol></li></ul><h3 id="3-BPDU-【Bridge-Protocol-Data-Unit-｜-桥接协议数据单元】"><a href="#3-BPDU-【Bridge-Protocol-Data-Unit-｜-桥接协议数据单元】" class="headerlink" title="3 BPDU 【Bridge Protocol Data Unit ｜ 桥接协议数据单元】"></a>3 BPDU 【Bridge Protocol Data Unit ｜ 桥接协议数据单元】</h3><ol><li>各个交换机使用 BPDU 来交换 STP 中要使用的信息</li><li>BPDU 使用组播方式传递，使用的组播地址为：<code>01-80-C2-00-00-00</code></li><li>BPDU的种类<ol><li>配置BPDU【Configuration BPDU】：用来实现 STP 的首次计算</li><li>拓扑变更通告【TCN】BPDU：用来在STP发生变化的时候使用</li></ol></li></ol><h2 id="三-STP的5种端口状态"><a href="#三-STP的5种端口状态" class="headerlink" title="三. STP的5种端口状态"></a>三. STP的5种端口状态</h2><ol><li>禁用[Disable]：不发送 BPDU， 不接受 BPDU，不学习 MAC 地址，不会转发数据。</li><li>阻塞[Discarding]：不发送 BPDU，<strong>接受 BPDU</strong>，不学习 MAC 地址，不会转发数据。</li><li>侦听[Listening]：<strong>发送 BPDU，接受 BPDU</strong>， 不学习 MAC 地址，不会转发数据<span style="color:red">【中间态】</span>。</li><li>学习[Learning]：<strong>发送 BPDU，接受 BPDU，学习 MAC 地址</strong>，不会转发数据<span style="color:red">【中间态】</span>。</li><li>转发[Forwarding]：<strong>发送 BPDU，接受 BPDU，学习 MAC 地址，转发数据。</strong></li></ol><h2 id="四-STP的拓扑结构变化"><a href="#四-STP的拓扑结构变化" class="headerlink" title="四. STP的拓扑结构变化"></a>四. STP的拓扑结构变化</h2><ol><li>在生成树中，一个阻塞状态的端口从阻塞状态最终恢复至转发状态，一共需要 <span style="color:red;">50s</span>。</li><li>Discarding 进入 Listening 需要 <span style="color:red;">20s</span> 【Maxage：最大老化时间】。</li><li>Listening 进入 Learning 需要 <span style="color:red;">15s</span>。</li><li>Learning 进入 Forwarding 需要 <span style="color:red;">15s</span> 【15s + 15s &#x3D; 30s Forwarding Dealy ：转发延迟】。</li><li>若是非直连链路，端口恢复需要 50s。</li><li>若是直连链路，只需 30s 【节省了 20s 的 maxage】。</li><li>交换机的 MAC 地址表默认 300s maxage，当STP的拓扑结构发生变化时，STP的TCN BPDU 会立即通知交换机的 MAC 地址表立即刷新，令交换机的 MAC 地址表的刷新时间从 300s 变为 15s 。</li></ol><h2 id="五-STP的配置"><a href="#五-STP的配置" class="headerlink" title="五. STP的配置"></a>五. STP的配置</h2><ol><li>在华为的交换机上，STP技术默认随着设备的启动而自动运行。</li><li>更改交换机的优先级</li></ol><pre class="line-numbers language-none"><code class="language-none">stp priority 4096<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>更改当前交换机的STP模式</li></ol><pre class="line-numbers language-none"><code class="language-none">stp mode stp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>更改STP的路径计算方式</li></ol><pre class="line-numbers language-none"><code class="language-none">stp pathcost-standard dotld-1998<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HCIA </tag>
            
            <tag> STP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署hexo到github上</title>
      <link href="/2023/08/24/%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E4%B8%8A/"/>
      <url>/2023/08/24/%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<ul><li>准备工作：<ul><li>git账号</li><li>本地安装git、nodejs(建议12.0以上)</li></ul></li></ul><p>官方文档 <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><p>下载 <a href="https://nodejs.org/en/download/releases">node.js</a></p><p><img src="/../../images/hexo%E5%AE%89%E8%A3%85/nodejs.png" alt="nodejs"></p><p>后面的默认就可以了</p><p>安装完成后，在命令行输入 <code>node -v</code>，出现版本号 <code>v20.5.1</code> 则表示安装成功。</p><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>安装 <a href="https://gitforwindows.org/">git for windows</a></p><p><img src="/../../images/hexo%E5%AE%89%E8%A3%85/git.png" alt="git"></p><p>和上面一样，默认即可</p><p>安装完成后，在命令行输入 <code>git -v</code>，出现版本号 <code>git version 2.42.0</code> 则表示安装成功。</p><h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"你的邮箱地址"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../../images/hexo%E5%AE%89%E8%A3%85/git_ssh.png" alt="git-ssh"></p><p>一直回车就可以了</p><p>然后将 <strong>id_rsa.pub</strong> 的内容复制到 github 的 SSH 中即可。</p><p><strong>测试ssh是否绑定成功</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#命令行中输入</span>$ <span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span class="token comment">#出现这段话表示连接成功</span><span class="token comment">#Hi shenlan823! You've successfully authenticated, but GitHub does not provide shell access.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><p>一键部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span>$ hexo init blog$ <span class="token builtin class-name">cd</span> blog$ <span class="token function">npm</span> <span class="token function">install</span>$ hexo server <span class="token parameter variable">-p</span> <span class="token number">5555</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在浏览器输入 <a href="http://localhost:5555/">http://localhost:5555</a> 检查是否搭建成功</p><p><img src="/../../images/hexo%E5%AE%89%E8%A3%85/hexo-example.png" alt="hexo-example"></p><h1 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h1><h2 id="1-安装-hexo-deployer-git"><a href="#1-安装-hexo-deployer-git" class="headerlink" title="1. 安装 hexo-deployer-git"></a>1. 安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2. 修改配置"></a>2. 修改配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#博客项目配置文件_config.yml(非主题配置文件)</span>url: https://shenlan823.github.iodeploy:  type: <span class="token function">git</span>  repo: <span class="token operator">&lt;</span>repository url<span class="token operator">></span> <span class="token comment">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span>  branch: <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-生成静态页面"><a href="#3-生成静态页面" class="headerlink" title="3. 生成静态页面"></a>3. 生成静态页面</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-部署网站"><a href="#4-部署网站" class="headerlink" title="4. 部署网站"></a>4. 部署网站</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-查看网站"><a href="#5-查看网站" class="headerlink" title="5. 查看网站"></a>5. 查看网站</h2><p>在浏览器输入 <a href="https://shenlan823.github.io/">https://shenlan823.github.io</a></p><h1 id="更换模版"><a href="#更换模版" class="headerlink" title="更换模版"></a>更换模版</h1><p>以本模版为例</p><p><a href="https://hexo.io/themes/">选择模版 https://hexo.io/themes/</a></p><p>下载模版，解压到<code> /blog/themes</code> 下，并改名 <code>oranges</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在hexo根配置文件 _config.yml 中设置你的主题</span>themes: oranges<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>模版地址：<a href="https://github.com/zchengsite/hexo-theme-oranges">Oranges</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/24/hello-world/"/>
      <url>/2023/08/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
